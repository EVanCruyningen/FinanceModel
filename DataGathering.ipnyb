{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["BdhnAhLRaWaq","FyAS5qobaZN-","rUTtlJk3awK2","v7mL6KKkaTvi","Q5EmGMVkaPWK","sI4Ain2iaNtc","jktH2gAOaMOE","Ep74IRJ1aLFQ","OlZxBvaraI2v","TX1QRgO2aHHd"],"authorship_tag":"ABX9TyNQDuS5drn98k1uJZ61uHEk"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Imports"],"metadata":{"id":"BdhnAhLRaWaq"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"X993xDwNpjUC"},"outputs":[],"source":["# Imports\n","import pandas as pd\n","from time import sleep, time\n","import http.client\n","import requests\n","import yfinance as yf"]},{"cell_type":"markdown","source":["# Data Gathering from yfinance"],"metadata":{"id":"FyAS5qobaZN-"}},{"cell_type":"code","source":["# Gather Costco Price Data\n","dat = yf.Ticker(\"COST\")\n","costData = pd.DataFrame(dat.history(period='5y'))\n","costData.reset_index(inplace=True)\n","costData.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"xGXrF403pyxT","executionInfo":{"status":"ok","timestamp":1744058021804,"user_tz":420,"elapsed":220,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"c8d87acc-6ff7-4988-9750-cd5460390552"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                       Date        Open        High         Low       Close  \\\n","0 2020-04-08 00:00:00-04:00  280.686458  282.811572  278.083007  281.477631   \n","1 2020-04-09 00:00:00-04:00  275.479428  279.987184  273.759095  275.994598   \n","2 2020-04-13 00:00:00-04:00  274.679168  279.619332  273.832828  275.635925   \n","3 2020-04-14 00:00:00-04:00  278.515330  289.554748  277.135402  288.993591   \n","4 2020-04-15 00:00:00-04:00  286.693737  288.634822  282.259564  285.433380   \n","\n","    Volume  Dividends  Stock Splits  \n","0  3964400        0.0           0.0  \n","1  6487600        0.0           0.0  \n","2  3120400        0.0           0.0  \n","3  4288300        0.0           0.0  \n","4  2937300        0.0           0.0  "],"text/html":["\n","  <div id=\"df-9fffe52e-587e-4f0e-976b-0b9588fff206\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","      <th>Dividends</th>\n","      <th>Stock Splits</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-04-08 00:00:00-04:00</td>\n","      <td>280.686458</td>\n","      <td>282.811572</td>\n","      <td>278.083007</td>\n","      <td>281.477631</td>\n","      <td>3964400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-04-09 00:00:00-04:00</td>\n","      <td>275.479428</td>\n","      <td>279.987184</td>\n","      <td>273.759095</td>\n","      <td>275.994598</td>\n","      <td>6487600</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-04-13 00:00:00-04:00</td>\n","      <td>274.679168</td>\n","      <td>279.619332</td>\n","      <td>273.832828</td>\n","      <td>275.635925</td>\n","      <td>3120400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-04-14 00:00:00-04:00</td>\n","      <td>278.515330</td>\n","      <td>289.554748</td>\n","      <td>277.135402</td>\n","      <td>288.993591</td>\n","      <td>4288300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-04-15 00:00:00-04:00</td>\n","      <td>286.693737</td>\n","      <td>288.634822</td>\n","      <td>282.259564</td>\n","      <td>285.433380</td>\n","      <td>2937300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9fffe52e-587e-4f0e-976b-0b9588fff206')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9fffe52e-587e-4f0e-976b-0b9588fff206 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9fffe52e-587e-4f0e-976b-0b9588fff206');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0d8f7a37-5e01-488f-9532-2d6fcbe5a034\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0d8f7a37-5e01-488f-9532-2d6fcbe5a034')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0d8f7a37-5e01-488f-9532-2d6fcbe5a034 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"costData","summary":"{\n  \"name\": \"costData\",\n  \"rows\": 1256,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-04-08 00:00:00-04:00\",\n        \"max\": \"2025-04-07 00:00:00-04:00\",\n        \"num_unique_values\": 1256,\n        \"samples\": [\n          \"2021-12-29 00:00:00-05:00\",\n          \"2020-09-01 00:00:00-04:00\",\n          \"2020-06-22 00:00:00-04:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 202.44247171960507,\n        \"min\": 273.89587565916565,\n        \"max\": 1076.47998046875,\n        \"num_unique_values\": 1256,\n        \"samples\": [\n          542.2216899969816,\n          319.44868829890544,\n          276.33937435893444\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 204.33814256164598,\n        \"min\": 274.83638787657696,\n        \"max\": 1078.22998046875,\n        \"num_unique_values\": 1255,\n        \"samples\": [\n          943.2378093161002,\n          324.7896187725785,\n          277.9806280426039\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 200.57392148398205,\n        \"min\": 270.9360929405081,\n        \"max\": 1068.010009765625,\n        \"num_unique_values\": 1255,\n        \"samples\": [\n          922.4807153361464,\n          319.17148859586473,\n          275.0023858711694\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 202.5860342289773,\n        \"min\": 273.444091796875,\n        \"max\": 1076.8599853515625,\n        \"num_unique_values\": 1253,\n        \"samples\": [\n          484.3772888183594,\n          895.4000244140625,\n          839.6570434570312\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 967691,\n        \"min\": 645800,\n        \"max\": 9511600,\n        \"num_unique_values\": 1213,\n        \"samples\": [\n          1494800,\n          1273600,\n          2713700\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dividends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5210692591072374,\n        \"min\": 0.0,\n        \"max\": 15.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.7,\n          1.02,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stock Splits\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","source":["# Short Term Indicator Calculations"],"metadata":{"id":"gUlGEYUMadUM"}},{"cell_type":"markdown","source":["## Overview"],"metadata":{"id":"rUTtlJk3awK2"}},{"cell_type":"code","source":["costData.shape #1257 trading days, with Open, High, Low, Close, Volume, Dividends, and Stock Splits\n","\n","# Desired Columns\n","# Open, High, Low, Close, Volume,\n","# 5, 10, 20, and 100 day moving average?\n","# RSI, ATR, Bol1, Bol2, MACD,\n","# StoOsc%K, StoOsc%D, ADI, P/E,\n","# BVPS, P/B, D/E, FCF/ppS, PEG, EBITDA\n","\n","# Also want code to be replicatable with ONLY a change of input ticker number\n","# https://yfinance-python.org/ for yfinance documentation"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aMvArC7dr1Mz","executionInfo":{"status":"ok","timestamp":1744058027031,"user_tz":420,"elapsed":9,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"c6322c12-620f-4bcf-df01-441120e29fdb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1256, 8)"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":["## Moving Averages"],"metadata":{"id":"v7mL6KKkaTvi"}},{"cell_type":"code","source":["# Calculating Moving Averages\n","costData[\"5DAvg\"] = costData[\"Close\"].rolling(window=5).mean()\n","costData[\"10DAvg\"] = costData[\"Close\"].rolling(window=10).mean()\n","costData[\"20DAvg\"] = costData[\"Close\"].rolling(window=20).mean()\n","costData.head()\n","\n","# Will likely need to chop off first 20 days of rolling average\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"IXFBzHxXvMR5","executionInfo":{"status":"ok","timestamp":1744058028196,"user_tz":420,"elapsed":68,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"b9ed68c2-445b-4a58-d2e8-d4285c9182f2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                       Date        Open        High         Low       Close  \\\n","0 2020-04-08 00:00:00-04:00  280.686458  282.811572  278.083007  281.477631   \n","1 2020-04-09 00:00:00-04:00  275.479428  279.987184  273.759095  275.994598   \n","2 2020-04-13 00:00:00-04:00  274.679168  279.619332  273.832828  275.635925   \n","3 2020-04-14 00:00:00-04:00  278.515330  289.554748  277.135402  288.993591   \n","4 2020-04-15 00:00:00-04:00  286.693737  288.634822  282.259564  285.433380   \n","\n","    Volume  Dividends  Stock Splits       5DAvg  10DAvg  20DAvg  \n","0  3964400        0.0           0.0         NaN     NaN     NaN  \n","1  6487600        0.0           0.0         NaN     NaN     NaN  \n","2  3120400        0.0           0.0         NaN     NaN     NaN  \n","3  4288300        0.0           0.0         NaN     NaN     NaN  \n","4  2937300        0.0           0.0  281.507025     NaN     NaN  "],"text/html":["\n","  <div id=\"df-8afac7c2-ab1c-48a5-bc02-addff71955d0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","      <th>Dividends</th>\n","      <th>Stock Splits</th>\n","      <th>5DAvg</th>\n","      <th>10DAvg</th>\n","      <th>20DAvg</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-04-08 00:00:00-04:00</td>\n","      <td>280.686458</td>\n","      <td>282.811572</td>\n","      <td>278.083007</td>\n","      <td>281.477631</td>\n","      <td>3964400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-04-09 00:00:00-04:00</td>\n","      <td>275.479428</td>\n","      <td>279.987184</td>\n","      <td>273.759095</td>\n","      <td>275.994598</td>\n","      <td>6487600</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-04-13 00:00:00-04:00</td>\n","      <td>274.679168</td>\n","      <td>279.619332</td>\n","      <td>273.832828</td>\n","      <td>275.635925</td>\n","      <td>3120400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-04-14 00:00:00-04:00</td>\n","      <td>278.515330</td>\n","      <td>289.554748</td>\n","      <td>277.135402</td>\n","      <td>288.993591</td>\n","      <td>4288300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-04-15 00:00:00-04:00</td>\n","      <td>286.693737</td>\n","      <td>288.634822</td>\n","      <td>282.259564</td>\n","      <td>285.433380</td>\n","      <td>2937300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>281.507025</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8afac7c2-ab1c-48a5-bc02-addff71955d0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8afac7c2-ab1c-48a5-bc02-addff71955d0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8afac7c2-ab1c-48a5-bc02-addff71955d0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3940e7d6-48d3-46ab-baf9-6271b22db661\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3940e7d6-48d3-46ab-baf9-6271b22db661')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3940e7d6-48d3-46ab-baf9-6271b22db661 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"# Will likely need to chop off first 20 days of rolling average\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-04-08 00:00:00-04:00\",\n        \"max\": \"2020-04-15 00:00:00-04:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2020-04-09 00:00:00-04:00\",\n          \"2020-04-15 00:00:00-04:00\",\n          \"2020-04-13 00:00:00-04:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.824790825108677,\n        \"min\": 274.6791676590865,\n        \"max\": 286.69373743393874,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          275.47942790684874,\n          286.69373743393874,\n          274.6791676590865\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.716149441704739,\n        \"min\": 279.6193318964788,\n        \"max\": 289.55474827419386,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          279.98718366014396,\n          288.63482188374127,\n          279.6193318964788\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.513819654337138,\n        \"min\": 273.7590953937874,\n        \"max\": 282.25956387057875,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          273.7590953937874,\n          282.25956387057875,\n          273.83282781252365\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.8378605374948505,\n        \"min\": 275.63592529296875,\n        \"max\": 288.99359130859375,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          275.9945983886719,\n          285.4333801269531,\n          275.63592529296875\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1418467,\n        \"min\": 2937300,\n        \"max\": 6487600,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          6487600,\n          2937300,\n          3120400\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dividends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stock Splits\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"5DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 281.50702514648435,\n        \"max\": 281.50702514648435,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          281.50702514648435\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"10DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"20DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["## Relative Strength Index"],"metadata":{"id":"Q5EmGMVkaPWK"}},{"cell_type":"code","source":["# Calculating RSI\n","# RSICostco = 100 - (100 / ( 1 + (Nup / Ndown))) where Nup and Ndown are the average gain and loss respectively in the last fourteen days\n","\n","# get all the differences in closing and opening price\n","delta = costData[\"Close\"].diff()\n","\n","# set the down values on up days to 0 and up values on down days to 0\n","gain = delta.clip(lower=0)\n","loss = -delta.clip(upper=0)\n","\n","#Calculate the average gain and loss\n","avg_gain = gain.rolling(window=14).mean()\n","avg_loss = loss.rolling(window=14).mean()\n","\n","#Calculate RS\n","rs = avg_gain / avg_loss\n","\n","#Add RSI to the index\n","costData[\"RSI\"] = 100 - (100 / ( 1 + rs))\n","costData[:-1]  # Looks pretty close to available online indexes, might need to use a smoothing function as some people say"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"ljyqbCw4tJtH","executionInfo":{"status":"ok","timestamp":1744058029681,"user_tz":420,"elapsed":68,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"bfbfa8fc-3051-4630-8a67-838dac5a1ade"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Date        Open        High         Low  \\\n","0    2020-04-08 00:00:00-04:00  280.686458  282.811572  278.083007   \n","1    2020-04-09 00:00:00-04:00  275.479428  279.987184  273.759095   \n","2    2020-04-13 00:00:00-04:00  274.679168  279.619332  273.832828   \n","3    2020-04-14 00:00:00-04:00  278.515330  289.554748  277.135402   \n","4    2020-04-15 00:00:00-04:00  286.693737  288.634822  282.259564   \n","...                        ...         ...         ...         ...   \n","1250 2025-03-31 00:00:00-04:00  922.359985  995.000000  922.039978   \n","1251 2025-04-01 00:00:00-04:00  942.419983  957.719971  938.750000   \n","1252 2025-04-02 00:00:00-04:00  950.840027  970.890015  950.000000   \n","1253 2025-04-03 00:00:00-04:00  931.080017  981.349976  928.000000   \n","1254 2025-04-04 00:00:00-04:00  955.000000  964.520020  914.140015   \n","\n","           Close   Volume  Dividends  Stock Splits       5DAvg      10DAvg  \\\n","0     281.477631  3964400        0.0           0.0         NaN         NaN   \n","1     275.994598  6487600        0.0           0.0         NaN         NaN   \n","2     275.635925  3120400        0.0           0.0         NaN         NaN   \n","3     288.993591  4288300        0.0           0.0         NaN         NaN   \n","4     285.433380  2937300        0.0           0.0  281.507025         NaN   \n","...          ...      ...        ...           ...         ...         ...   \n","1250  945.780029  3102000        0.0           0.0  934.840002  920.700000   \n","1251  954.400024  2041500        0.0           0.0  939.668005  926.335004   \n","1252  965.080017  1719900        0.0           0.0  946.734009  932.438007   \n","1253  967.080017  3096900        0.0           0.0  952.400012  939.606006   \n","1254  916.479980  5161200        0.0           0.0  949.764014  940.328003   \n","\n","          20DAvg        RSI  \n","0            NaN        NaN  \n","1            NaN        NaN  \n","2            NaN        NaN  \n","3            NaN        NaN  \n","4            NaN        NaN  \n","...          ...        ...  \n","1250  939.283997  54.533068  \n","1251  935.160498  57.856896  \n","1252  931.026999  75.141820  \n","1253  928.050000  73.088178  \n","1254  925.658499  49.962790  \n","\n","[1255 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-dbb5a64b-a9ef-4f5c-8b8b-f293c74808e7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","      <th>Dividends</th>\n","      <th>Stock Splits</th>\n","      <th>5DAvg</th>\n","      <th>10DAvg</th>\n","      <th>20DAvg</th>\n","      <th>RSI</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-04-08 00:00:00-04:00</td>\n","      <td>280.686458</td>\n","      <td>282.811572</td>\n","      <td>278.083007</td>\n","      <td>281.477631</td>\n","      <td>3964400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-04-09 00:00:00-04:00</td>\n","      <td>275.479428</td>\n","      <td>279.987184</td>\n","      <td>273.759095</td>\n","      <td>275.994598</td>\n","      <td>6487600</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-04-13 00:00:00-04:00</td>\n","      <td>274.679168</td>\n","      <td>279.619332</td>\n","      <td>273.832828</td>\n","      <td>275.635925</td>\n","      <td>3120400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-04-14 00:00:00-04:00</td>\n","      <td>278.515330</td>\n","      <td>289.554748</td>\n","      <td>277.135402</td>\n","      <td>288.993591</td>\n","      <td>4288300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-04-15 00:00:00-04:00</td>\n","      <td>286.693737</td>\n","      <td>288.634822</td>\n","      <td>282.259564</td>\n","      <td>285.433380</td>\n","      <td>2937300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>281.507025</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1250</th>\n","      <td>2025-03-31 00:00:00-04:00</td>\n","      <td>922.359985</td>\n","      <td>995.000000</td>\n","      <td>922.039978</td>\n","      <td>945.780029</td>\n","      <td>3102000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>934.840002</td>\n","      <td>920.700000</td>\n","      <td>939.283997</td>\n","      <td>54.533068</td>\n","    </tr>\n","    <tr>\n","      <th>1251</th>\n","      <td>2025-04-01 00:00:00-04:00</td>\n","      <td>942.419983</td>\n","      <td>957.719971</td>\n","      <td>938.750000</td>\n","      <td>954.400024</td>\n","      <td>2041500</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>939.668005</td>\n","      <td>926.335004</td>\n","      <td>935.160498</td>\n","      <td>57.856896</td>\n","    </tr>\n","    <tr>\n","      <th>1252</th>\n","      <td>2025-04-02 00:00:00-04:00</td>\n","      <td>950.840027</td>\n","      <td>970.890015</td>\n","      <td>950.000000</td>\n","      <td>965.080017</td>\n","      <td>1719900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>946.734009</td>\n","      <td>932.438007</td>\n","      <td>931.026999</td>\n","      <td>75.141820</td>\n","    </tr>\n","    <tr>\n","      <th>1253</th>\n","      <td>2025-04-03 00:00:00-04:00</td>\n","      <td>931.080017</td>\n","      <td>981.349976</td>\n","      <td>928.000000</td>\n","      <td>967.080017</td>\n","      <td>3096900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>952.400012</td>\n","      <td>939.606006</td>\n","      <td>928.050000</td>\n","      <td>73.088178</td>\n","    </tr>\n","    <tr>\n","      <th>1254</th>\n","      <td>2025-04-04 00:00:00-04:00</td>\n","      <td>955.000000</td>\n","      <td>964.520020</td>\n","      <td>914.140015</td>\n","      <td>916.479980</td>\n","      <td>5161200</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>949.764014</td>\n","      <td>940.328003</td>\n","      <td>925.658499</td>\n","      <td>49.962790</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1255 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dbb5a64b-a9ef-4f5c-8b8b-f293c74808e7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dbb5a64b-a9ef-4f5c-8b8b-f293c74808e7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dbb5a64b-a9ef-4f5c-8b8b-f293c74808e7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bff54420-26f2-4177-9ea7-68951e1d8c14\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bff54420-26f2-4177-9ea7-68951e1d8c14')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bff54420-26f2-4177-9ea7-68951e1d8c14 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"costData[:-1]  # Looks pretty close to available online indexes, might need to use a smoothing function as some people say\",\n  \"rows\": 1255,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-04-08 00:00:00-04:00\",\n        \"max\": \"2025-04-04 00:00:00-04:00\",\n        \"num_unique_values\": 1255,\n        \"samples\": [\n          \"2025-01-10 00:00:00-05:00\",\n          \"2020-09-01 00:00:00-04:00\",\n          \"2020-06-22 00:00:00-04:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 202.2888227188113,\n        \"min\": 273.89587565916565,\n        \"max\": 1076.47998046875,\n        \"num_unique_values\": 1255,\n        \"samples\": [\n          932.3298180327499,\n          319.44868829890544,\n          276.33937435893444\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 204.12266215623606,\n        \"min\": 274.83638787657696,\n        \"max\": 1078.22998046875,\n        \"num_unique_values\": 1254,\n        \"samples\": [\n          964.52001953125,\n          324.7896187725785,\n          277.9806280426039\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 200.4323826023888,\n        \"min\": 270.9360929405081,\n        \"max\": 1068.010009765625,\n        \"num_unique_values\": 1254,\n        \"samples\": [\n          914.1400146484375,\n          319.17148859586473,\n          275.0023858711694\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 202.4045568814001,\n        \"min\": 273.444091796875,\n        \"max\": 1076.8599853515625,\n        \"num_unique_values\": 1252,\n        \"samples\": [\n          484.3772888183594,\n          904.0499877929688,\n          843.3328247070312\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 965852,\n        \"min\": 645800,\n        \"max\": 9511600,\n        \"num_unique_values\": 1212,\n        \"samples\": [\n          1960500,\n          2097300,\n          2713700\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dividends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5212760716048063,\n        \"min\": 0.0,\n        \"max\": 15.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.7,\n          1.02,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stock Splits\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"5DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 201.67506705245074,\n        \"min\": 275.9557678222656,\n        \"max\": 1066.8179931640625,\n        \"num_unique_values\": 1251,\n        \"samples\": [\n          480.4500427246094\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"10DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 200.78879509588882,\n        \"min\": 276.1060729980469,\n        \"max\": 1058.8029052734375,\n        \"num_unique_values\": 1246,\n        \"samples\": [\n          467.2945983886719\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"20DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 199.11333328920168,\n        \"min\": 278.4992706298828,\n        \"max\": 1049.1454498291016,\n        \"num_unique_values\": 1236,\n        \"samples\": [\n          370.12478790283205\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RSI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.727200771494164,\n        \"min\": 7.856297191735294,\n        \"max\": 93.75706331742019,\n        \"num_unique_values\": 1241,\n        \"samples\": [\n          85.66642150853967\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["## Average True Range"],"metadata":{"id":"sI4Ain2iaNtc"}},{"cell_type":"code","source":["# Calculate True Range(TR) = Max[ (Today High - Today Low), abs(Today high - yesterday close), abs(today low minus yesterday close)]\n","# Average this value over the last four days\n","\n","# Get all the differences for every value in the array, rolling average of those days\n","\n","#Loop through whole array\n","for i in range(1, len(costData[\"Close\"])):\n","  # use pandas .at(i, \"colName\") to access specific values\n","  diff1 = costData.at[i, \"High\"] - costData.at[i, \"Low\"]\n","  diff2 = abs(costData.at[i, \"High\"] - costData.at[i - 1, \"Close\"])\n","  diff3 = abs(costData.at[i, \"Low\"] - costData.at[i - 1, \"Close\"])\n","\n","  # Add to a new column that is the true range\n","  costData.at[i,\"TR\"] = max(diff1, diff2, diff3)\n","\n","#Rolling average of the TR column\n","costData[\"ATR\"] = costData[\"TR\"].rolling(window=14).mean()\n","costData[:-1]\n","\n","# Could probably do this using pandas vectorized operations, but im not sure how to do that rn"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"UsvAQC-j1cBK","executionInfo":{"status":"ok","timestamp":1744058275238,"user_tz":420,"elapsed":185,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"ebcb8475-27a6-465c-c9c0-8a1ec098831e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Date        Open        High         Low  \\\n","0    2020-04-08 00:00:00-04:00  280.686458  282.811572  278.083007   \n","1    2020-04-09 00:00:00-04:00  275.479428  279.987184  273.759095   \n","2    2020-04-13 00:00:00-04:00  274.679168  279.619332  273.832828   \n","3    2020-04-14 00:00:00-04:00  278.515330  289.554748  277.135402   \n","4    2020-04-15 00:00:00-04:00  286.693737  288.634822  282.259564   \n","...                        ...         ...         ...         ...   \n","1250 2025-03-31 00:00:00-04:00  922.359985  995.000000  922.039978   \n","1251 2025-04-01 00:00:00-04:00  942.419983  957.719971  938.750000   \n","1252 2025-04-02 00:00:00-04:00  950.840027  970.890015  950.000000   \n","1253 2025-04-03 00:00:00-04:00  931.080017  981.349976  928.000000   \n","1254 2025-04-04 00:00:00-04:00  955.000000  964.520020  914.140015   \n","\n","           Close   Volume  Dividends  Stock Splits       5DAvg      10DAvg  \\\n","0     281.477631  3964400        0.0           0.0         NaN         NaN   \n","1     275.994598  6487600        0.0           0.0         NaN         NaN   \n","2     275.635925  3120400        0.0           0.0         NaN         NaN   \n","3     288.993591  4288300        0.0           0.0         NaN         NaN   \n","4     285.433380  2937300        0.0           0.0  281.507025         NaN   \n","...          ...      ...        ...           ...         ...         ...   \n","1250  945.780029  3102000        0.0           0.0  934.840002  920.700000   \n","1251  954.400024  2041500        0.0           0.0  939.668005  926.335004   \n","1252  965.080017  1719900        0.0           0.0  946.734009  932.438007   \n","1253  967.080017  3096900        0.0           0.0  952.400012  939.606006   \n","1254  916.479980  5161200        0.0           0.0  949.764014  940.328003   \n","\n","          20DAvg        RSI         TR        ATR  \n","0            NaN        NaN  66.114990        NaN  \n","1            NaN        NaN   7.718535        NaN  \n","2            NaN        NaN   5.786504        NaN  \n","3            NaN        NaN  13.918823        NaN  \n","4            NaN        NaN   6.734027        NaN  \n","...          ...        ...        ...        ...  \n","1250  939.283997  54.533068  72.960022  23.668575  \n","1251  935.160498  57.856896  18.969971  23.514287  \n","1252  931.026999  75.141820  20.890015  22.177141  \n","1253  928.050000  73.088178  53.349976  24.174282  \n","1254  925.658499  49.962790  52.940002  26.142138  \n","\n","[1255 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-6e77fcce-58d2-4c71-b942-0374f3db93c3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","      <th>Dividends</th>\n","      <th>Stock Splits</th>\n","      <th>5DAvg</th>\n","      <th>10DAvg</th>\n","      <th>20DAvg</th>\n","      <th>RSI</th>\n","      <th>TR</th>\n","      <th>ATR</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-04-08 00:00:00-04:00</td>\n","      <td>280.686458</td>\n","      <td>282.811572</td>\n","      <td>278.083007</td>\n","      <td>281.477631</td>\n","      <td>3964400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>66.114990</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-04-09 00:00:00-04:00</td>\n","      <td>275.479428</td>\n","      <td>279.987184</td>\n","      <td>273.759095</td>\n","      <td>275.994598</td>\n","      <td>6487600</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7.718535</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-04-13 00:00:00-04:00</td>\n","      <td>274.679168</td>\n","      <td>279.619332</td>\n","      <td>273.832828</td>\n","      <td>275.635925</td>\n","      <td>3120400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.786504</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-04-14 00:00:00-04:00</td>\n","      <td>278.515330</td>\n","      <td>289.554748</td>\n","      <td>277.135402</td>\n","      <td>288.993591</td>\n","      <td>4288300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>13.918823</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-04-15 00:00:00-04:00</td>\n","      <td>286.693737</td>\n","      <td>288.634822</td>\n","      <td>282.259564</td>\n","      <td>285.433380</td>\n","      <td>2937300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>281.507025</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.734027</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1250</th>\n","      <td>2025-03-31 00:00:00-04:00</td>\n","      <td>922.359985</td>\n","      <td>995.000000</td>\n","      <td>922.039978</td>\n","      <td>945.780029</td>\n","      <td>3102000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>934.840002</td>\n","      <td>920.700000</td>\n","      <td>939.283997</td>\n","      <td>54.533068</td>\n","      <td>72.960022</td>\n","      <td>23.668575</td>\n","    </tr>\n","    <tr>\n","      <th>1251</th>\n","      <td>2025-04-01 00:00:00-04:00</td>\n","      <td>942.419983</td>\n","      <td>957.719971</td>\n","      <td>938.750000</td>\n","      <td>954.400024</td>\n","      <td>2041500</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>939.668005</td>\n","      <td>926.335004</td>\n","      <td>935.160498</td>\n","      <td>57.856896</td>\n","      <td>18.969971</td>\n","      <td>23.514287</td>\n","    </tr>\n","    <tr>\n","      <th>1252</th>\n","      <td>2025-04-02 00:00:00-04:00</td>\n","      <td>950.840027</td>\n","      <td>970.890015</td>\n","      <td>950.000000</td>\n","      <td>965.080017</td>\n","      <td>1719900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>946.734009</td>\n","      <td>932.438007</td>\n","      <td>931.026999</td>\n","      <td>75.141820</td>\n","      <td>20.890015</td>\n","      <td>22.177141</td>\n","    </tr>\n","    <tr>\n","      <th>1253</th>\n","      <td>2025-04-03 00:00:00-04:00</td>\n","      <td>931.080017</td>\n","      <td>981.349976</td>\n","      <td>928.000000</td>\n","      <td>967.080017</td>\n","      <td>3096900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>952.400012</td>\n","      <td>939.606006</td>\n","      <td>928.050000</td>\n","      <td>73.088178</td>\n","      <td>53.349976</td>\n","      <td>24.174282</td>\n","    </tr>\n","    <tr>\n","      <th>1254</th>\n","      <td>2025-04-04 00:00:00-04:00</td>\n","      <td>955.000000</td>\n","      <td>964.520020</td>\n","      <td>914.140015</td>\n","      <td>916.479980</td>\n","      <td>5161200</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>949.764014</td>\n","      <td>940.328003</td>\n","      <td>925.658499</td>\n","      <td>49.962790</td>\n","      <td>52.940002</td>\n","      <td>26.142138</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1255 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e77fcce-58d2-4c71-b942-0374f3db93c3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6e77fcce-58d2-4c71-b942-0374f3db93c3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6e77fcce-58d2-4c71-b942-0374f3db93c3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eea13fba-36bf-4564-a606-9bd2eb1e6cda\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eea13fba-36bf-4564-a606-9bd2eb1e6cda')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eea13fba-36bf-4564-a606-9bd2eb1e6cda button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"costData[:-1]\",\n  \"rows\": 1255,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-04-08 00:00:00-04:00\",\n        \"max\": \"2025-04-04 00:00:00-04:00\",\n        \"num_unique_values\": 1255,\n        \"samples\": [\n          \"2025-01-10 00:00:00-05:00\",\n          \"2020-09-01 00:00:00-04:00\",\n          \"2020-06-22 00:00:00-04:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 202.2888227188113,\n        \"min\": 273.89587565916565,\n        \"max\": 1076.47998046875,\n        \"num_unique_values\": 1255,\n        \"samples\": [\n          932.3298180327499,\n          319.44868829890544,\n          276.33937435893444\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 204.12266215623606,\n        \"min\": 274.83638787657696,\n        \"max\": 1078.22998046875,\n        \"num_unique_values\": 1254,\n        \"samples\": [\n          964.52001953125,\n          324.7896187725785,\n          277.9806280426039\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 200.4323826023888,\n        \"min\": 270.9360929405081,\n        \"max\": 1068.010009765625,\n        \"num_unique_values\": 1254,\n        \"samples\": [\n          914.1400146484375,\n          319.17148859586473,\n          275.0023858711694\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 202.4045568814001,\n        \"min\": 273.444091796875,\n        \"max\": 1076.8599853515625,\n        \"num_unique_values\": 1252,\n        \"samples\": [\n          484.3772888183594,\n          904.0499877929688,\n          843.3328247070312\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 965852,\n        \"min\": 645800,\n        \"max\": 9511600,\n        \"num_unique_values\": 1212,\n        \"samples\": [\n          1960500,\n          2097300,\n          2713700\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dividends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5212760716048063,\n        \"min\": 0.0,\n        \"max\": 15.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.7,\n          1.02,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stock Splits\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"5DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 201.67506705245074,\n        \"min\": 275.9557678222656,\n        \"max\": 1066.8179931640625,\n        \"num_unique_values\": 1251,\n        \"samples\": [\n          480.4500427246094\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"10DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 200.78879509588882,\n        \"min\": 276.1060729980469,\n        \"max\": 1058.8029052734375,\n        \"num_unique_values\": 1246,\n        \"samples\": [\n          467.2945983886719\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"20DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 199.11333328920168,\n        \"min\": 278.4992706298828,\n        \"max\": 1049.1454498291016,\n        \"num_unique_values\": 1236,\n        \"samples\": [\n          370.12478790283205\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RSI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.727200771494164,\n        \"min\": 7.856297191735294,\n        \"max\": 93.75706331742019,\n        \"num_unique_values\": 1241,\n        \"samples\": [\n          85.66642150853967\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.498433873724274,\n        \"min\": 1.838823559312118,\n        \"max\": 83.8399658203125,\n        \"num_unique_values\": 1254,\n        \"samples\": [\n          52.94000244140625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ATR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.771634065034121,\n        \"min\": 3.8719469515979603,\n        \"max\": 30.554286411830358,\n        \"num_unique_values\": 1242,\n        \"samples\": [\n          9.255151255827636\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":49}]},{"cell_type":"markdown","source":["## Bollinger Bands"],"metadata":{"id":"jktH2gAOaMOE"}},{"cell_type":"code","source":["# BolU, BolL\n","# BolU = SmoothedAvgPrice + SmoothAvgPriceStdDev * numStdDev\n","# BolL = SmoothedAvgPrice - SmoothAvgPriceStdDev * numStdDev\n","# numStdDev is normally 2.\n","\n","numStdDev = 2\n","# get the two necessary values in this format\n","bolStdDev = costData[\"Close\"].rolling(window = 14).std()\n","bolAvg = costData[\"Close\"].rolling(window = 14).mean()\n","\n","costData[\"BolU\"] = bolAvg + bolStdDev * numStdDev\n","costData[\"BolL\"] = bolAvg - bolStdDev * numStdDev\n","\n","costData[:-1] # Looks like it works"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":961},"id":"hpZGUy0k-gyM","executionInfo":{"status":"ok","timestamp":1744058892910,"user_tz":420,"elapsed":94,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"5603b086-af1f-44ea-c882-919bab38b091"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Date        Open        High         Low  \\\n","0    2020-04-08 00:00:00-04:00  280.686458  282.811572  278.083007   \n","1    2020-04-09 00:00:00-04:00  275.479428  279.987184  273.759095   \n","2    2020-04-13 00:00:00-04:00  274.679168  279.619332  273.832828   \n","3    2020-04-14 00:00:00-04:00  278.515330  289.554748  277.135402   \n","4    2020-04-15 00:00:00-04:00  286.693737  288.634822  282.259564   \n","...                        ...         ...         ...         ...   \n","1250 2025-03-31 00:00:00-04:00  922.359985  995.000000  922.039978   \n","1251 2025-04-01 00:00:00-04:00  942.419983  957.719971  938.750000   \n","1252 2025-04-02 00:00:00-04:00  950.840027  970.890015  950.000000   \n","1253 2025-04-03 00:00:00-04:00  931.080017  981.349976  928.000000   \n","1254 2025-04-04 00:00:00-04:00  955.000000  964.520020  914.140015   \n","\n","           Close   Volume  Dividends  Stock Splits       5DAvg      10DAvg  \\\n","0     281.477631  3964400        0.0           0.0         NaN         NaN   \n","1     275.994598  6487600        0.0           0.0         NaN         NaN   \n","2     275.635925  3120400        0.0           0.0         NaN         NaN   \n","3     288.993591  4288300        0.0           0.0         NaN         NaN   \n","4     285.433380  2937300        0.0           0.0  281.507025         NaN   \n","...          ...      ...        ...           ...         ...         ...   \n","1250  945.780029  3102000        0.0           0.0  934.840002  920.700000   \n","1251  954.400024  2041500        0.0           0.0  939.668005  926.335004   \n","1252  965.080017  1719900        0.0           0.0  946.734009  932.438007   \n","1253  967.080017  3096900        0.0           0.0  952.400012  939.606006   \n","1254  916.479980  5161200        0.0           0.0  949.764014  940.328003   \n","\n","          20DAvg        RSI         TR        ATR        BolU        BolL  \n","0            NaN        NaN  66.114990        NaN         NaN         NaN  \n","1            NaN        NaN   7.718535        NaN         NaN         NaN  \n","2            NaN        NaN   5.786504        NaN         NaN         NaN  \n","3            NaN        NaN  13.918823        NaN         NaN         NaN  \n","4            NaN        NaN   6.734027        NaN         NaN         NaN  \n","...          ...        ...        ...        ...         ...         ...  \n","1250  939.283997  54.533068  72.960022  23.668575  952.157567  882.875287  \n","1251  935.160498  57.856896  18.969971  23.514287  959.142116  879.793597  \n","1252  931.026999  75.141820  20.890015  22.177141  967.638236  881.934623  \n","1253  928.050000  73.088178  53.349976  24.174282  975.827580  882.768140  \n","1254  925.658499  49.962790  52.940002  26.142138  975.829252  882.747896  \n","\n","[1255 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-9d986281-e7e3-481b-b924-b7f30963afe8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","      <th>Dividends</th>\n","      <th>Stock Splits</th>\n","      <th>5DAvg</th>\n","      <th>10DAvg</th>\n","      <th>20DAvg</th>\n","      <th>RSI</th>\n","      <th>TR</th>\n","      <th>ATR</th>\n","      <th>BolU</th>\n","      <th>BolL</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-04-08 00:00:00-04:00</td>\n","      <td>280.686458</td>\n","      <td>282.811572</td>\n","      <td>278.083007</td>\n","      <td>281.477631</td>\n","      <td>3964400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>66.114990</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-04-09 00:00:00-04:00</td>\n","      <td>275.479428</td>\n","      <td>279.987184</td>\n","      <td>273.759095</td>\n","      <td>275.994598</td>\n","      <td>6487600</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7.718535</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-04-13 00:00:00-04:00</td>\n","      <td>274.679168</td>\n","      <td>279.619332</td>\n","      <td>273.832828</td>\n","      <td>275.635925</td>\n","      <td>3120400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.786504</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-04-14 00:00:00-04:00</td>\n","      <td>278.515330</td>\n","      <td>289.554748</td>\n","      <td>277.135402</td>\n","      <td>288.993591</td>\n","      <td>4288300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>13.918823</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-04-15 00:00:00-04:00</td>\n","      <td>286.693737</td>\n","      <td>288.634822</td>\n","      <td>282.259564</td>\n","      <td>285.433380</td>\n","      <td>2937300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>281.507025</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.734027</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1250</th>\n","      <td>2025-03-31 00:00:00-04:00</td>\n","      <td>922.359985</td>\n","      <td>995.000000</td>\n","      <td>922.039978</td>\n","      <td>945.780029</td>\n","      <td>3102000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>934.840002</td>\n","      <td>920.700000</td>\n","      <td>939.283997</td>\n","      <td>54.533068</td>\n","      <td>72.960022</td>\n","      <td>23.668575</td>\n","      <td>952.157567</td>\n","      <td>882.875287</td>\n","    </tr>\n","    <tr>\n","      <th>1251</th>\n","      <td>2025-04-01 00:00:00-04:00</td>\n","      <td>942.419983</td>\n","      <td>957.719971</td>\n","      <td>938.750000</td>\n","      <td>954.400024</td>\n","      <td>2041500</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>939.668005</td>\n","      <td>926.335004</td>\n","      <td>935.160498</td>\n","      <td>57.856896</td>\n","      <td>18.969971</td>\n","      <td>23.514287</td>\n","      <td>959.142116</td>\n","      <td>879.793597</td>\n","    </tr>\n","    <tr>\n","      <th>1252</th>\n","      <td>2025-04-02 00:00:00-04:00</td>\n","      <td>950.840027</td>\n","      <td>970.890015</td>\n","      <td>950.000000</td>\n","      <td>965.080017</td>\n","      <td>1719900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>946.734009</td>\n","      <td>932.438007</td>\n","      <td>931.026999</td>\n","      <td>75.141820</td>\n","      <td>20.890015</td>\n","      <td>22.177141</td>\n","      <td>967.638236</td>\n","      <td>881.934623</td>\n","    </tr>\n","    <tr>\n","      <th>1253</th>\n","      <td>2025-04-03 00:00:00-04:00</td>\n","      <td>931.080017</td>\n","      <td>981.349976</td>\n","      <td>928.000000</td>\n","      <td>967.080017</td>\n","      <td>3096900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>952.400012</td>\n","      <td>939.606006</td>\n","      <td>928.050000</td>\n","      <td>73.088178</td>\n","      <td>53.349976</td>\n","      <td>24.174282</td>\n","      <td>975.827580</td>\n","      <td>882.768140</td>\n","    </tr>\n","    <tr>\n","      <th>1254</th>\n","      <td>2025-04-04 00:00:00-04:00</td>\n","      <td>955.000000</td>\n","      <td>964.520020</td>\n","      <td>914.140015</td>\n","      <td>916.479980</td>\n","      <td>5161200</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>949.764014</td>\n","      <td>940.328003</td>\n","      <td>925.658499</td>\n","      <td>49.962790</td>\n","      <td>52.940002</td>\n","      <td>26.142138</td>\n","      <td>975.829252</td>\n","      <td>882.747896</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1255 rows × 16 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d986281-e7e3-481b-b924-b7f30963afe8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9d986281-e7e3-481b-b924-b7f30963afe8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9d986281-e7e3-481b-b924-b7f30963afe8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-070bd617-d7d7-4ade-8501-611362e9861a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-070bd617-d7d7-4ade-8501-611362e9861a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-070bd617-d7d7-4ade-8501-611362e9861a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"costData[:-1]\",\n  \"rows\": 1255,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-04-08 00:00:00-04:00\",\n        \"max\": \"2025-04-04 00:00:00-04:00\",\n        \"num_unique_values\": 1255,\n        \"samples\": [\n          \"2025-01-10 00:00:00-05:00\",\n          \"2020-09-01 00:00:00-04:00\",\n          \"2020-06-22 00:00:00-04:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 202.2888227188113,\n        \"min\": 273.89587565916565,\n        \"max\": 1076.47998046875,\n        \"num_unique_values\": 1255,\n        \"samples\": [\n          932.3298180327499,\n          319.44868829890544,\n          276.33937435893444\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 204.12266215623606,\n        \"min\": 274.83638787657696,\n        \"max\": 1078.22998046875,\n        \"num_unique_values\": 1254,\n        \"samples\": [\n          964.52001953125,\n          324.7896187725785,\n          277.9806280426039\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 200.4323826023888,\n        \"min\": 270.9360929405081,\n        \"max\": 1068.010009765625,\n        \"num_unique_values\": 1254,\n        \"samples\": [\n          914.1400146484375,\n          319.17148859586473,\n          275.0023858711694\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 202.4045568814001,\n        \"min\": 273.444091796875,\n        \"max\": 1076.8599853515625,\n        \"num_unique_values\": 1252,\n        \"samples\": [\n          484.3772888183594,\n          904.0499877929688,\n          843.3328247070312\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 965852,\n        \"min\": 645800,\n        \"max\": 9511600,\n        \"num_unique_values\": 1212,\n        \"samples\": [\n          1960500,\n          2097300,\n          2713700\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dividends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5212760716048063,\n        \"min\": 0.0,\n        \"max\": 15.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.7,\n          1.02,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stock Splits\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"5DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 201.67506705245074,\n        \"min\": 275.9557678222656,\n        \"max\": 1066.8179931640625,\n        \"num_unique_values\": 1251,\n        \"samples\": [\n          480.4500427246094\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"10DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 200.78879509588882,\n        \"min\": 276.1060729980469,\n        \"max\": 1058.8029052734375,\n        \"num_unique_values\": 1246,\n        \"samples\": [\n          467.2945983886719\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"20DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 199.11333328920168,\n        \"min\": 278.4992706298828,\n        \"max\": 1049.1454498291016,\n        \"num_unique_values\": 1236,\n        \"samples\": [\n          370.12478790283205\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RSI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.727200771494164,\n        \"min\": 7.856297191735294,\n        \"max\": 93.75706331742019,\n        \"num_unique_values\": 1241,\n        \"samples\": [\n          85.66642150853967\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.498433873724274,\n        \"min\": 1.838823559312118,\n        \"max\": 83.8399658203125,\n        \"num_unique_values\": 1254,\n        \"samples\": [\n          52.94000244140625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ATR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.771634065034121,\n        \"min\": 3.8719469515979603,\n        \"max\": 30.554286411830358,\n        \"num_unique_values\": 1242,\n        \"samples\": [\n          9.255151255827636\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BolU\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 209.523595807026,\n        \"min\": 279.89704807719704,\n        \"max\": 1114.188040035578,\n        \"num_unique_values\": 1242,\n        \"samples\": [\n          581.0917490671885\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BolL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 191.5382359016719,\n        \"min\": 265.5997126395529,\n        \"max\": 1025.9951317733723,\n        \"num_unique_values\": 1242,\n        \"samples\": [\n          540.4973709802445\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["## MACD"],"metadata":{"id":"Ep74IRJ1aLFQ"}},{"cell_type":"code","source":["# MACD = EMAshort(P) - EMAlong(P)\n","# Where P is the close price, short is usually 12 periods, and long is usually 26 periods\n","# EMA = (Closet * Smoothing / (1 + Days)) + (EMAy * (1 - (Smoothing/ (1 + Days))))\n","# EMAs = ClosePrice * 2/13 + EMAy * 11/13\n","# EMAl = ClosePrice * 2/27 + EMAy * 25/27\n","# Calculate EMAs and EMAl, then make a MACD from the difference, could factor out when using PCA, or linear model because MACD is just combined EMAs and EMAl\n","\n","# Use SMA as the first value for EMA - investopedia says so, but multiply by weights\n","\n","\n","\n","# First, calculate first EMAs and EMAl value from SMA\n","costData.at[14, \"EMAs\"] = costData.at[14, \"10DAvg\"]\n","costData.at[14, \"EMAl\"] = costData.at[14, \"10DAvg\"]\n","\n","# Then, calculate EMAs and EMAl for all values\n","for i in range(15, len(costData[\"Close\"])):\n","  costData.at[i, \"EMAs\"] = costData.at[i, \"Close\"] * (2/13) + costData.at[i - 1, \"EMAs\"] * 11/13\n","  costData.at[i, \"EMAl\"] = costData.at[i, \"Close\"] * (2/27) + costData.at[i - 1, \"EMAl\"] * 2/27\n","\n","\n","# Finally, make a MACD column from EMAs and EMAl\n","costData[\"MACD\"] = costData[\"EMAs\"] - costData[\"EMAl\"]\n","\n","# costData.loc[14]\n","costData[:-1] # Looks like it works"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":981},"id":"yyi7cQA5AwnG","executionInfo":{"status":"ok","timestamp":1744061064501,"user_tz":420,"elapsed":250,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"987414cf-2bc6-499f-b099-2f523ccb95e6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Date        Open        High         Low  \\\n","0    2020-04-08 00:00:00-04:00  280.686458  282.811572  278.083007   \n","1    2020-04-09 00:00:00-04:00  275.479428  279.987184  273.759095   \n","2    2020-04-13 00:00:00-04:00  274.679168  279.619332  273.832828   \n","3    2020-04-14 00:00:00-04:00  278.515330  289.554748  277.135402   \n","4    2020-04-15 00:00:00-04:00  286.693737  288.634822  282.259564   \n","...                        ...         ...         ...         ...   \n","1250 2025-03-31 00:00:00-04:00  922.359985  995.000000  922.039978   \n","1251 2025-04-01 00:00:00-04:00  942.419983  957.719971  938.750000   \n","1252 2025-04-02 00:00:00-04:00  950.840027  970.890015  950.000000   \n","1253 2025-04-03 00:00:00-04:00  931.080017  981.349976  928.000000   \n","1254 2025-04-04 00:00:00-04:00  955.000000  964.520020  914.140015   \n","\n","           Close   Volume  Dividends  Stock Splits       5DAvg      10DAvg  \\\n","0     281.477631  3964400        0.0           0.0         NaN         NaN   \n","1     275.994598  6487600        0.0           0.0         NaN         NaN   \n","2     275.635925  3120400        0.0           0.0         NaN         NaN   \n","3     288.993591  4288300        0.0           0.0         NaN         NaN   \n","4     285.433380  2937300        0.0           0.0  281.507025         NaN   \n","...          ...      ...        ...           ...         ...         ...   \n","1250  945.780029  3102000        0.0           0.0  934.840002  920.700000   \n","1251  954.400024  2041500        0.0           0.0  939.668005  926.335004   \n","1252  965.080017  1719900        0.0           0.0  946.734009  932.438007   \n","1253  967.080017  3096900        0.0           0.0  952.400012  939.606006   \n","1254  916.479980  5161200        0.0           0.0  949.764014  940.328003   \n","\n","          20DAvg        RSI         TR        ATR        BolU        BolL  \\\n","0            NaN        NaN  66.114990        NaN         NaN         NaN   \n","1            NaN        NaN   7.718535        NaN         NaN         NaN   \n","2            NaN        NaN   5.786504        NaN         NaN         NaN   \n","3            NaN        NaN  13.918823        NaN         NaN         NaN   \n","4            NaN        NaN   6.734027        NaN         NaN         NaN   \n","...          ...        ...        ...        ...         ...         ...   \n","1250  939.283997  54.533068  72.960022  23.668575  952.157567  882.875287   \n","1251  935.160498  57.856896  18.969971  23.514287  959.142116  879.793597   \n","1252  931.026999  75.141820  20.890015  22.177141  967.638236  881.934623   \n","1253  928.050000  73.088178  53.349976  24.174282  975.827580  882.768140   \n","1254  925.658499  49.962790  52.940002  26.142138  975.829252  882.747896   \n","\n","            EMAs       EMAl        MACD  \n","0            NaN        NaN         NaN  \n","1            NaN        NaN         NaN  \n","2            NaN        NaN         NaN  \n","3            NaN        NaN         NaN  \n","4            NaN        NaN         NaN  \n","...          ...        ...         ...  \n","1250  933.030816  75.570574  857.460243  \n","1251  936.318387  76.294118  860.024268  \n","1252  940.743253  77.138825  863.604428  \n","1253  944.795063  77.349544  867.445519  \n","1254  940.438896  73.617002  866.821895  \n","\n","[1255 rows x 19 columns]"],"text/html":["\n","  <div id=\"df-28e405bd-d9b2-486e-8929-52387c85dd57\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","      <th>Dividends</th>\n","      <th>Stock Splits</th>\n","      <th>5DAvg</th>\n","      <th>10DAvg</th>\n","      <th>20DAvg</th>\n","      <th>RSI</th>\n","      <th>TR</th>\n","      <th>ATR</th>\n","      <th>BolU</th>\n","      <th>BolL</th>\n","      <th>EMAs</th>\n","      <th>EMAl</th>\n","      <th>MACD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-04-08 00:00:00-04:00</td>\n","      <td>280.686458</td>\n","      <td>282.811572</td>\n","      <td>278.083007</td>\n","      <td>281.477631</td>\n","      <td>3964400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>66.114990</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-04-09 00:00:00-04:00</td>\n","      <td>275.479428</td>\n","      <td>279.987184</td>\n","      <td>273.759095</td>\n","      <td>275.994598</td>\n","      <td>6487600</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7.718535</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-04-13 00:00:00-04:00</td>\n","      <td>274.679168</td>\n","      <td>279.619332</td>\n","      <td>273.832828</td>\n","      <td>275.635925</td>\n","      <td>3120400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.786504</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-04-14 00:00:00-04:00</td>\n","      <td>278.515330</td>\n","      <td>289.554748</td>\n","      <td>277.135402</td>\n","      <td>288.993591</td>\n","      <td>4288300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>13.918823</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-04-15 00:00:00-04:00</td>\n","      <td>286.693737</td>\n","      <td>288.634822</td>\n","      <td>282.259564</td>\n","      <td>285.433380</td>\n","      <td>2937300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>281.507025</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.734027</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1250</th>\n","      <td>2025-03-31 00:00:00-04:00</td>\n","      <td>922.359985</td>\n","      <td>995.000000</td>\n","      <td>922.039978</td>\n","      <td>945.780029</td>\n","      <td>3102000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>934.840002</td>\n","      <td>920.700000</td>\n","      <td>939.283997</td>\n","      <td>54.533068</td>\n","      <td>72.960022</td>\n","      <td>23.668575</td>\n","      <td>952.157567</td>\n","      <td>882.875287</td>\n","      <td>933.030816</td>\n","      <td>75.570574</td>\n","      <td>857.460243</td>\n","    </tr>\n","    <tr>\n","      <th>1251</th>\n","      <td>2025-04-01 00:00:00-04:00</td>\n","      <td>942.419983</td>\n","      <td>957.719971</td>\n","      <td>938.750000</td>\n","      <td>954.400024</td>\n","      <td>2041500</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>939.668005</td>\n","      <td>926.335004</td>\n","      <td>935.160498</td>\n","      <td>57.856896</td>\n","      <td>18.969971</td>\n","      <td>23.514287</td>\n","      <td>959.142116</td>\n","      <td>879.793597</td>\n","      <td>936.318387</td>\n","      <td>76.294118</td>\n","      <td>860.024268</td>\n","    </tr>\n","    <tr>\n","      <th>1252</th>\n","      <td>2025-04-02 00:00:00-04:00</td>\n","      <td>950.840027</td>\n","      <td>970.890015</td>\n","      <td>950.000000</td>\n","      <td>965.080017</td>\n","      <td>1719900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>946.734009</td>\n","      <td>932.438007</td>\n","      <td>931.026999</td>\n","      <td>75.141820</td>\n","      <td>20.890015</td>\n","      <td>22.177141</td>\n","      <td>967.638236</td>\n","      <td>881.934623</td>\n","      <td>940.743253</td>\n","      <td>77.138825</td>\n","      <td>863.604428</td>\n","    </tr>\n","    <tr>\n","      <th>1253</th>\n","      <td>2025-04-03 00:00:00-04:00</td>\n","      <td>931.080017</td>\n","      <td>981.349976</td>\n","      <td>928.000000</td>\n","      <td>967.080017</td>\n","      <td>3096900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>952.400012</td>\n","      <td>939.606006</td>\n","      <td>928.050000</td>\n","      <td>73.088178</td>\n","      <td>53.349976</td>\n","      <td>24.174282</td>\n","      <td>975.827580</td>\n","      <td>882.768140</td>\n","      <td>944.795063</td>\n","      <td>77.349544</td>\n","      <td>867.445519</td>\n","    </tr>\n","    <tr>\n","      <th>1254</th>\n","      <td>2025-04-04 00:00:00-04:00</td>\n","      <td>955.000000</td>\n","      <td>964.520020</td>\n","      <td>914.140015</td>\n","      <td>916.479980</td>\n","      <td>5161200</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>949.764014</td>\n","      <td>940.328003</td>\n","      <td>925.658499</td>\n","      <td>49.962790</td>\n","      <td>52.940002</td>\n","      <td>26.142138</td>\n","      <td>975.829252</td>\n","      <td>882.747896</td>\n","      <td>940.438896</td>\n","      <td>73.617002</td>\n","      <td>866.821895</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1255 rows × 19 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28e405bd-d9b2-486e-8929-52387c85dd57')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-28e405bd-d9b2-486e-8929-52387c85dd57 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-28e405bd-d9b2-486e-8929-52387c85dd57');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8b77a556-e3f7-4600-8093-b891ae2572df\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8b77a556-e3f7-4600-8093-b891ae2572df')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8b77a556-e3f7-4600-8093-b891ae2572df button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"costData[:-1] # Looks like it works\",\n  \"rows\": 1255,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-04-08 00:00:00-04:00\",\n        \"max\": \"2025-04-04 00:00:00-04:00\",\n        \"num_unique_values\": 1255,\n        \"samples\": [\n          \"2025-01-10 00:00:00-05:00\",\n          \"2020-09-01 00:00:00-04:00\",\n          \"2020-06-22 00:00:00-04:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Open\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 202.2888227188113,\n        \"min\": 273.89587565916565,\n        \"max\": 1076.47998046875,\n        \"num_unique_values\": 1255,\n        \"samples\": [\n          932.3298180327499,\n          319.44868829890544,\n          276.33937435893444\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"High\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 204.12266215623606,\n        \"min\": 274.83638787657696,\n        \"max\": 1078.22998046875,\n        \"num_unique_values\": 1254,\n        \"samples\": [\n          964.52001953125,\n          324.7896187725785,\n          277.9806280426039\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Low\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 200.4323826023888,\n        \"min\": 270.9360929405081,\n        \"max\": 1068.010009765625,\n        \"num_unique_values\": 1254,\n        \"samples\": [\n          914.1400146484375,\n          319.17148859586473,\n          275.0023858711694\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Close\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 202.4045568814001,\n        \"min\": 273.444091796875,\n        \"max\": 1076.8599853515625,\n        \"num_unique_values\": 1252,\n        \"samples\": [\n          484.3772888183594,\n          904.0499877929688,\n          843.3328247070312\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Volume\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 965852,\n        \"min\": 645800,\n        \"max\": 9511600,\n        \"num_unique_values\": 1212,\n        \"samples\": [\n          1960500,\n          2097300,\n          2713700\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dividends\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5212760716048063,\n        \"min\": 0.0,\n        \"max\": 15.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.7,\n          1.02,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Stock Splits\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"5DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 201.67506705245074,\n        \"min\": 275.9557678222656,\n        \"max\": 1066.8179931640625,\n        \"num_unique_values\": 1251,\n        \"samples\": [\n          480.4500427246094\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"10DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 200.78879509588882,\n        \"min\": 276.1060729980469,\n        \"max\": 1058.8029052734375,\n        \"num_unique_values\": 1246,\n        \"samples\": [\n          467.2945983886719\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"20DAvg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 199.11333328920168,\n        \"min\": 278.4992706298828,\n        \"max\": 1049.1454498291016,\n        \"num_unique_values\": 1236,\n        \"samples\": [\n          370.12478790283205\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RSI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.727200771494164,\n        \"min\": 7.856297191735294,\n        \"max\": 93.75706331742019,\n        \"num_unique_values\": 1241,\n        \"samples\": [\n          85.66642150853967\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.498433873724274,\n        \"min\": 1.838823559312118,\n        \"max\": 83.8399658203125,\n        \"num_unique_values\": 1254,\n        \"samples\": [\n          52.94000244140625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ATR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.771634065034121,\n        \"min\": 3.8719469515979603,\n        \"max\": 30.554286411830358,\n        \"num_unique_values\": 1242,\n        \"samples\": [\n          9.255151255827636\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BolU\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 209.523595807026,\n        \"min\": 279.89704807719704,\n        \"max\": 1114.188040035578,\n        \"num_unique_values\": 1242,\n        \"samples\": [\n          581.0917490671885\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BolL\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 191.5382359016719,\n        \"min\": 265.5997126395529,\n        \"max\": 1025.9951317733723,\n        \"num_unique_values\": 1242,\n        \"samples\": [\n          540.4973709802445\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EMAs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 200.07750636974168,\n        \"min\": 276.9419577798424,\n        \"max\": 1044.703002460993,\n        \"num_unique_values\": 1241,\n        \"samples\": [\n          612.7525497363058\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"EMAl\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.503358010787302,\n        \"min\": 21.896299683559008,\n        \"max\": 285.1003479003906,\n        \"num_unique_values\": 1241,\n        \"samples\": [\n          52.778914470248694\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MACD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 184.43158822444494,\n        \"min\": 0.0,\n        \"max\": 960.2358012021139,\n        \"num_unique_values\": 1241,\n        \"samples\": [\n          559.9736352660572\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":58}]},{"cell_type":"markdown","source":["## Stochastic Oscillator"],"metadata":{"id":"OlZxBvaraI2v"}},{"cell_type":"code","source":["# StoOsc%K, StoOsc%D, ADI\n","# Stochastic Oscillator\n","# StoOsc%K = 100 * (Closet - minlow(last14periods))/(maxhigh(last14periods)))\n","# StoOsc%D = 100 * (Closet - minlow(last3periods))/(maxhigh(last3periods)))\n","\n","# use a roll to find the lowest low and the highest high, do the math on it\n","stoKH = costData[\"Low\"].rolling(window=14).min()\n","stoKL = costData[\"High\"].rolling(window=14).max()\n","\n","costData[\"StoK\"] = 100 * (costData[\"Close\"] - stoKH) / (stoKL - stoKH)\n","\n","stoDH = costData[\"Low\"].rolling(window=3).min()\n","stoDL = costData[\"High\"].rolling(window=3).max()\n","\n","costData[\"StoD\"] = 100 * (costData[\"Close\"] - stoDH) / (stoDL - stoDH)\n","\n","costData[:-1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":981},"id":"ZlePHNrOJAb7","executionInfo":{"status":"ok","timestamp":1744061866352,"user_tz":420,"elapsed":80,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"34431003-08a4-4180-e0d9-4f5b01b5f923"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Date        Open        High         Low  \\\n","0    2020-04-08 00:00:00-04:00  280.686458  282.811572  278.083007   \n","1    2020-04-09 00:00:00-04:00  275.479428  279.987184  273.759095   \n","2    2020-04-13 00:00:00-04:00  274.679168  279.619332  273.832828   \n","3    2020-04-14 00:00:00-04:00  278.515330  289.554748  277.135402   \n","4    2020-04-15 00:00:00-04:00  286.693737  288.634822  282.259564   \n","...                        ...         ...         ...         ...   \n","1250 2025-03-31 00:00:00-04:00  922.359985  995.000000  922.039978   \n","1251 2025-04-01 00:00:00-04:00  942.419983  957.719971  938.750000   \n","1252 2025-04-02 00:00:00-04:00  950.840027  970.890015  950.000000   \n","1253 2025-04-03 00:00:00-04:00  931.080017  981.349976  928.000000   \n","1254 2025-04-04 00:00:00-04:00  955.000000  964.520020  914.140015   \n","\n","           Close   Volume  Dividends  Stock Splits       5DAvg      10DAvg  \\\n","0     281.477631  3964400        0.0           0.0         NaN         NaN   \n","1     275.994598  6487600        0.0           0.0         NaN         NaN   \n","2     275.635925  3120400        0.0           0.0         NaN         NaN   \n","3     288.993591  4288300        0.0           0.0         NaN         NaN   \n","4     285.433380  2937300        0.0           0.0  281.507025         NaN   \n","...          ...      ...        ...           ...         ...         ...   \n","1250  945.780029  3102000        0.0           0.0  934.840002  920.700000   \n","1251  954.400024  2041500        0.0           0.0  939.668005  926.335004   \n","1252  965.080017  1719900        0.0           0.0  946.734009  932.438007   \n","1253  967.080017  3096900        0.0           0.0  952.400012  939.606006   \n","1254  916.479980  5161200        0.0           0.0  949.764014  940.328003   \n","\n","      ...        RSI         TR        ATR        BolU        BolL  \\\n","0     ...        NaN  66.114990        NaN         NaN         NaN   \n","1     ...        NaN   7.718535        NaN         NaN         NaN   \n","2     ...        NaN   5.786504        NaN         NaN         NaN   \n","3     ...        NaN  13.918823        NaN         NaN         NaN   \n","4     ...        NaN   6.734027        NaN         NaN         NaN   \n","...   ...        ...        ...        ...         ...         ...   \n","1250  ...  54.533068  72.960022  23.668575  952.157567  882.875287   \n","1251  ...  57.856896  18.969971  23.514287  959.142116  879.793597   \n","1252  ...  75.141820  20.890015  22.177141  967.638236  881.934623   \n","1253  ...  73.088178  53.349976  24.174282  975.827580  882.768140   \n","1254  ...  49.962790  52.940002  26.142138  975.829252  882.747896   \n","\n","            EMAs       EMAl        MACD       StoK       StoD  \n","0            NaN        NaN         NaN        NaN        NaN  \n","1            NaN        NaN         NaN        NaN        NaN  \n","2            NaN        NaN         NaN        NaN  20.732779  \n","3            NaN        NaN         NaN        NaN  96.447396  \n","4            NaN        NaN         NaN        NaN  73.785848  \n","...          ...        ...         ...        ...        ...  \n","1250  933.030816  75.570574  857.460243  56.611451  32.538438  \n","1251  936.318387  76.294118  860.024268  64.210177  44.353120  \n","1252  940.743253  77.138825  863.604428  73.624839  58.991264  \n","1253  944.795063  77.349544  867.445519  74.855918  73.252174  \n","1254  940.438896  73.617002  866.821895  29.286712   3.481576  \n","\n","[1255 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-ed7cd0c3-0a7d-4cec-a810-b22197da5822\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","      <th>Dividends</th>\n","      <th>Stock Splits</th>\n","      <th>5DAvg</th>\n","      <th>10DAvg</th>\n","      <th>...</th>\n","      <th>RSI</th>\n","      <th>TR</th>\n","      <th>ATR</th>\n","      <th>BolU</th>\n","      <th>BolL</th>\n","      <th>EMAs</th>\n","      <th>EMAl</th>\n","      <th>MACD</th>\n","      <th>StoK</th>\n","      <th>StoD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-04-08 00:00:00-04:00</td>\n","      <td>280.686458</td>\n","      <td>282.811572</td>\n","      <td>278.083007</td>\n","      <td>281.477631</td>\n","      <td>3964400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>66.114990</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-04-09 00:00:00-04:00</td>\n","      <td>275.479428</td>\n","      <td>279.987184</td>\n","      <td>273.759095</td>\n","      <td>275.994598</td>\n","      <td>6487600</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>7.718535</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-04-13 00:00:00-04:00</td>\n","      <td>274.679168</td>\n","      <td>279.619332</td>\n","      <td>273.832828</td>\n","      <td>275.635925</td>\n","      <td>3120400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>5.786504</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>20.732779</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-04-14 00:00:00-04:00</td>\n","      <td>278.515330</td>\n","      <td>289.554748</td>\n","      <td>277.135402</td>\n","      <td>288.993591</td>\n","      <td>4288300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>13.918823</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>96.447396</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-04-15 00:00:00-04:00</td>\n","      <td>286.693737</td>\n","      <td>288.634822</td>\n","      <td>282.259564</td>\n","      <td>285.433380</td>\n","      <td>2937300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>281.507025</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>6.734027</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>73.785848</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1250</th>\n","      <td>2025-03-31 00:00:00-04:00</td>\n","      <td>922.359985</td>\n","      <td>995.000000</td>\n","      <td>922.039978</td>\n","      <td>945.780029</td>\n","      <td>3102000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>934.840002</td>\n","      <td>920.700000</td>\n","      <td>...</td>\n","      <td>54.533068</td>\n","      <td>72.960022</td>\n","      <td>23.668575</td>\n","      <td>952.157567</td>\n","      <td>882.875287</td>\n","      <td>933.030816</td>\n","      <td>75.570574</td>\n","      <td>857.460243</td>\n","      <td>56.611451</td>\n","      <td>32.538438</td>\n","    </tr>\n","    <tr>\n","      <th>1251</th>\n","      <td>2025-04-01 00:00:00-04:00</td>\n","      <td>942.419983</td>\n","      <td>957.719971</td>\n","      <td>938.750000</td>\n","      <td>954.400024</td>\n","      <td>2041500</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>939.668005</td>\n","      <td>926.335004</td>\n","      <td>...</td>\n","      <td>57.856896</td>\n","      <td>18.969971</td>\n","      <td>23.514287</td>\n","      <td>959.142116</td>\n","      <td>879.793597</td>\n","      <td>936.318387</td>\n","      <td>76.294118</td>\n","      <td>860.024268</td>\n","      <td>64.210177</td>\n","      <td>44.353120</td>\n","    </tr>\n","    <tr>\n","      <th>1252</th>\n","      <td>2025-04-02 00:00:00-04:00</td>\n","      <td>950.840027</td>\n","      <td>970.890015</td>\n","      <td>950.000000</td>\n","      <td>965.080017</td>\n","      <td>1719900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>946.734009</td>\n","      <td>932.438007</td>\n","      <td>...</td>\n","      <td>75.141820</td>\n","      <td>20.890015</td>\n","      <td>22.177141</td>\n","      <td>967.638236</td>\n","      <td>881.934623</td>\n","      <td>940.743253</td>\n","      <td>77.138825</td>\n","      <td>863.604428</td>\n","      <td>73.624839</td>\n","      <td>58.991264</td>\n","    </tr>\n","    <tr>\n","      <th>1253</th>\n","      <td>2025-04-03 00:00:00-04:00</td>\n","      <td>931.080017</td>\n","      <td>981.349976</td>\n","      <td>928.000000</td>\n","      <td>967.080017</td>\n","      <td>3096900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>952.400012</td>\n","      <td>939.606006</td>\n","      <td>...</td>\n","      <td>73.088178</td>\n","      <td>53.349976</td>\n","      <td>24.174282</td>\n","      <td>975.827580</td>\n","      <td>882.768140</td>\n","      <td>944.795063</td>\n","      <td>77.349544</td>\n","      <td>867.445519</td>\n","      <td>74.855918</td>\n","      <td>73.252174</td>\n","    </tr>\n","    <tr>\n","      <th>1254</th>\n","      <td>2025-04-04 00:00:00-04:00</td>\n","      <td>955.000000</td>\n","      <td>964.520020</td>\n","      <td>914.140015</td>\n","      <td>916.479980</td>\n","      <td>5161200</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>949.764014</td>\n","      <td>940.328003</td>\n","      <td>...</td>\n","      <td>49.962790</td>\n","      <td>52.940002</td>\n","      <td>26.142138</td>\n","      <td>975.829252</td>\n","      <td>882.747896</td>\n","      <td>940.438896</td>\n","      <td>73.617002</td>\n","      <td>866.821895</td>\n","      <td>29.286712</td>\n","      <td>3.481576</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1255 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed7cd0c3-0a7d-4cec-a810-b22197da5822')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ed7cd0c3-0a7d-4cec-a810-b22197da5822 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ed7cd0c3-0a7d-4cec-a810-b22197da5822');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-77653451-6ed5-4330-8364-1b128a59dd82\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-77653451-6ed5-4330-8364-1b128a59dd82')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-77653451-6ed5-4330-8364-1b128a59dd82 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":68}]},{"cell_type":"markdown","source":["## ADX"],"metadata":{"id":"TX1QRgO2aHHd"}},{"cell_type":"code","source":["# ADX - Average Directional Index\n","# Need to calculate PDM, MDM, then SMA, then DI14+ and DI14- and then DX\n","# upmove = Current High - Previous High\n","# downmove = Previous Low - Current low\n","# If upmove > downmove and upmove > 0, DM+ = upmove, else DM+ = 0\n","# If downmove > upmove and downmove > 0, DM- = downmove, else DM- = 0\n","# DI14+ = 100 * SMA OF DM+ / ATR over that period\n","# DI14- = 100 * SMA of DM- / ATR over that period\n","# ADX = 100 * SMA of abs((DI+ - DI-) / (DI+ + DI-))\n","\n","# Calculate upmove and downmove for each one, store in a costData column\n","for i in range(1, len(costData[\"Close\"])):\n","  upmove = costData.at[i, \"High\"] - costData.at[i - 1, \"High\"]\n","  downmove = costData.at[i, \"Low\"] - costData.at[i - 1, \"Low\"]\n","  if((upmove > downmove) & (upmove > 0)):\n","    costData.at[i, \"DMP\"] = upmove\n","  else:\n","    costData.at[i, \"DMP\"] = 0\n","  if((downmove > upmove) & (downmove > 0)):\n","    costData.at[i, \"DMM\"] = downmove\n","  else:\n","    costData.at[i, \"DMM\"] = 0\n","  # DMP is positive, DMM is negative\n","\n","\n","# Calculate the DI14P and DI14N using rolling\n","costData[\"DI14P\"] = 100 * costData[\"DMP\"].rolling(window = 14).mean() / costData[\"ATR\"]\n","costData[\"DI14N\"] = 100 * costData[\"DMM\"].rolling(window = 14).mean() / costData[\"ATR\"]\n","\n","# ADX = 100 * SMA of abs(DI+ - DI-) / abs(DI+ + DI-)\n","costData[\"ADX\"] = 100 * abs(costData[\"DI14P\"] - costData[\"DI14N\"]) / abs(costData[\"DI14P\"] + costData[\"DI14N\"])\n","costData[:-1] #works"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":981},"id":"BFY8OV1LJF1F","executionInfo":{"status":"ok","timestamp":1744064804682,"user_tz":420,"elapsed":219,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"765886b7-97a0-436f-876d-a8359d22ffa3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Date        Open        High         Low  \\\n","0    2020-04-08 00:00:00-04:00  280.686458  282.811572  278.083007   \n","1    2020-04-09 00:00:00-04:00  275.479428  279.987184  273.759095   \n","2    2020-04-13 00:00:00-04:00  274.679168  279.619332  273.832828   \n","3    2020-04-14 00:00:00-04:00  278.515330  289.554748  277.135402   \n","4    2020-04-15 00:00:00-04:00  286.693737  288.634822  282.259564   \n","...                        ...         ...         ...         ...   \n","1250 2025-03-31 00:00:00-04:00  922.359985  995.000000  922.039978   \n","1251 2025-04-01 00:00:00-04:00  942.419983  957.719971  938.750000   \n","1252 2025-04-02 00:00:00-04:00  950.840027  970.890015  950.000000   \n","1253 2025-04-03 00:00:00-04:00  931.080017  981.349976  928.000000   \n","1254 2025-04-04 00:00:00-04:00  955.000000  964.520020  914.140015   \n","\n","           Close   Volume  Dividends  Stock Splits       5DAvg      10DAvg  \\\n","0     281.477631  3964400        0.0           0.0         NaN         NaN   \n","1     275.994598  6487600        0.0           0.0         NaN         NaN   \n","2     275.635925  3120400        0.0           0.0         NaN         NaN   \n","3     288.993591  4288300        0.0           0.0         NaN         NaN   \n","4     285.433380  2937300        0.0           0.0  281.507025         NaN   \n","...          ...      ...        ...           ...         ...         ...   \n","1250  945.780029  3102000        0.0           0.0  934.840002  920.700000   \n","1251  954.400024  2041500        0.0           0.0  939.668005  926.335004   \n","1252  965.080017  1719900        0.0           0.0  946.734009  932.438007   \n","1253  967.080017  3096900        0.0           0.0  952.400012  939.606006   \n","1254  916.479980  5161200        0.0           0.0  949.764014  940.328003   \n","\n","      ...        EMAs       EMAl        MACD       StoK       StoD        DMP  \\\n","0     ...         NaN        NaN         NaN        NaN        NaN        NaN   \n","1     ...         NaN        NaN         NaN        NaN        NaN   0.000000   \n","2     ...         NaN        NaN         NaN        NaN  20.732779   0.000000   \n","3     ...         NaN        NaN         NaN        NaN  96.447396   9.935416   \n","4     ...         NaN        NaN         NaN        NaN  73.785848   0.000000   \n","...   ...         ...        ...         ...        ...        ...        ...   \n","1250  ...  933.030816  75.570574  857.460243  56.611451  32.538438  56.250000   \n","1251  ...  936.318387  76.294118  860.024268  64.210177  44.353120   0.000000   \n","1252  ...  940.743253  77.138825  863.604428  73.624839  58.991264  13.170044   \n","1253  ...  944.795063  77.349544  867.445519  74.855918  73.252174  10.459961   \n","1254  ...  940.438896  73.617002  866.821895  29.286712   3.481576   0.000000   \n","\n","            DMM      DI14P      DI14N        ADX  \n","0           NaN        NaN        NaN        NaN  \n","1      0.000000        NaN        NaN        NaN  \n","2      0.073732        NaN        NaN        NaN  \n","3      0.000000        NaN        NaN        NaN  \n","4      5.124161        NaN        NaN        NaN  \n","...         ...        ...        ...        ...  \n","1250   0.000000  22.842224  12.249505  30.185798  \n","1251  16.710022  21.054069  17.405828   9.485831  \n","1252   0.000000  26.565333  18.455292  18.014057  \n","1253   0.000000  27.461298  16.930622  23.722056  \n","1254   0.000000  25.394142  15.656165  23.722056  \n","\n","[1255 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-47b4b687-4ea7-45e1-8a21-04938da3fe28\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","      <th>Dividends</th>\n","      <th>Stock Splits</th>\n","      <th>5DAvg</th>\n","      <th>10DAvg</th>\n","      <th>...</th>\n","      <th>EMAs</th>\n","      <th>EMAl</th>\n","      <th>MACD</th>\n","      <th>StoK</th>\n","      <th>StoD</th>\n","      <th>DMP</th>\n","      <th>DMM</th>\n","      <th>DI14P</th>\n","      <th>DI14N</th>\n","      <th>ADX</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-04-08 00:00:00-04:00</td>\n","      <td>280.686458</td>\n","      <td>282.811572</td>\n","      <td>278.083007</td>\n","      <td>281.477631</td>\n","      <td>3964400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-04-09 00:00:00-04:00</td>\n","      <td>275.479428</td>\n","      <td>279.987184</td>\n","      <td>273.759095</td>\n","      <td>275.994598</td>\n","      <td>6487600</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-04-13 00:00:00-04:00</td>\n","      <td>274.679168</td>\n","      <td>279.619332</td>\n","      <td>273.832828</td>\n","      <td>275.635925</td>\n","      <td>3120400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>20.732779</td>\n","      <td>0.000000</td>\n","      <td>0.073732</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-04-14 00:00:00-04:00</td>\n","      <td>278.515330</td>\n","      <td>289.554748</td>\n","      <td>277.135402</td>\n","      <td>288.993591</td>\n","      <td>4288300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>96.447396</td>\n","      <td>9.935416</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-04-15 00:00:00-04:00</td>\n","      <td>286.693737</td>\n","      <td>288.634822</td>\n","      <td>282.259564</td>\n","      <td>285.433380</td>\n","      <td>2937300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>281.507025</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>73.785848</td>\n","      <td>0.000000</td>\n","      <td>5.124161</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1250</th>\n","      <td>2025-03-31 00:00:00-04:00</td>\n","      <td>922.359985</td>\n","      <td>995.000000</td>\n","      <td>922.039978</td>\n","      <td>945.780029</td>\n","      <td>3102000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>934.840002</td>\n","      <td>920.700000</td>\n","      <td>...</td>\n","      <td>933.030816</td>\n","      <td>75.570574</td>\n","      <td>857.460243</td>\n","      <td>56.611451</td>\n","      <td>32.538438</td>\n","      <td>56.250000</td>\n","      <td>0.000000</td>\n","      <td>22.842224</td>\n","      <td>12.249505</td>\n","      <td>30.185798</td>\n","    </tr>\n","    <tr>\n","      <th>1251</th>\n","      <td>2025-04-01 00:00:00-04:00</td>\n","      <td>942.419983</td>\n","      <td>957.719971</td>\n","      <td>938.750000</td>\n","      <td>954.400024</td>\n","      <td>2041500</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>939.668005</td>\n","      <td>926.335004</td>\n","      <td>...</td>\n","      <td>936.318387</td>\n","      <td>76.294118</td>\n","      <td>860.024268</td>\n","      <td>64.210177</td>\n","      <td>44.353120</td>\n","      <td>0.000000</td>\n","      <td>16.710022</td>\n","      <td>21.054069</td>\n","      <td>17.405828</td>\n","      <td>9.485831</td>\n","    </tr>\n","    <tr>\n","      <th>1252</th>\n","      <td>2025-04-02 00:00:00-04:00</td>\n","      <td>950.840027</td>\n","      <td>970.890015</td>\n","      <td>950.000000</td>\n","      <td>965.080017</td>\n","      <td>1719900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>946.734009</td>\n","      <td>932.438007</td>\n","      <td>...</td>\n","      <td>940.743253</td>\n","      <td>77.138825</td>\n","      <td>863.604428</td>\n","      <td>73.624839</td>\n","      <td>58.991264</td>\n","      <td>13.170044</td>\n","      <td>0.000000</td>\n","      <td>26.565333</td>\n","      <td>18.455292</td>\n","      <td>18.014057</td>\n","    </tr>\n","    <tr>\n","      <th>1253</th>\n","      <td>2025-04-03 00:00:00-04:00</td>\n","      <td>931.080017</td>\n","      <td>981.349976</td>\n","      <td>928.000000</td>\n","      <td>967.080017</td>\n","      <td>3096900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>952.400012</td>\n","      <td>939.606006</td>\n","      <td>...</td>\n","      <td>944.795063</td>\n","      <td>77.349544</td>\n","      <td>867.445519</td>\n","      <td>74.855918</td>\n","      <td>73.252174</td>\n","      <td>10.459961</td>\n","      <td>0.000000</td>\n","      <td>27.461298</td>\n","      <td>16.930622</td>\n","      <td>23.722056</td>\n","    </tr>\n","    <tr>\n","      <th>1254</th>\n","      <td>2025-04-04 00:00:00-04:00</td>\n","      <td>955.000000</td>\n","      <td>964.520020</td>\n","      <td>914.140015</td>\n","      <td>916.479980</td>\n","      <td>5161200</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>949.764014</td>\n","      <td>940.328003</td>\n","      <td>...</td>\n","      <td>940.438896</td>\n","      <td>73.617002</td>\n","      <td>866.821895</td>\n","      <td>29.286712</td>\n","      <td>3.481576</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>25.394142</td>\n","      <td>15.656165</td>\n","      <td>23.722056</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1255 rows × 26 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47b4b687-4ea7-45e1-8a21-04938da3fe28')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-47b4b687-4ea7-45e1-8a21-04938da3fe28 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-47b4b687-4ea7-45e1-8a21-04938da3fe28');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-98a57e1b-9ee6-4c22-b197-56d7e1382c85\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-98a57e1b-9ee6-4c22-b197-56d7e1382c85')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-98a57e1b-9ee6-4c22-b197-56d7e1382c85 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":78}]},{"cell_type":"markdown","source":["## Output to CSV"],"metadata":{"id":"AF13u3oqao-n"}},{"cell_type":"code","source":["# Send this to a CSV\n","costData.to_csv(\"IndicatedData.csv\", index = True)\n","\n","# This CSV is all of our short term indicators\n","costData[:-1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":981},"id":"XCisUdzrXRfQ","executionInfo":{"status":"ok","timestamp":1744065712507,"user_tz":420,"elapsed":117,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"a93c5e2d-f3f2-4786-fb70-e28899d3c282"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                          Date        Open        High         Low  \\\n","0    2020-04-08 00:00:00-04:00  280.686458  282.811572  278.083007   \n","1    2020-04-09 00:00:00-04:00  275.479428  279.987184  273.759095   \n","2    2020-04-13 00:00:00-04:00  274.679168  279.619332  273.832828   \n","3    2020-04-14 00:00:00-04:00  278.515330  289.554748  277.135402   \n","4    2020-04-15 00:00:00-04:00  286.693737  288.634822  282.259564   \n","...                        ...         ...         ...         ...   \n","1250 2025-03-31 00:00:00-04:00  922.359985  995.000000  922.039978   \n","1251 2025-04-01 00:00:00-04:00  942.419983  957.719971  938.750000   \n","1252 2025-04-02 00:00:00-04:00  950.840027  970.890015  950.000000   \n","1253 2025-04-03 00:00:00-04:00  931.080017  981.349976  928.000000   \n","1254 2025-04-04 00:00:00-04:00  955.000000  964.520020  914.140015   \n","\n","           Close   Volume  Dividends  Stock Splits       5DAvg      10DAvg  \\\n","0     281.477631  3964400        0.0           0.0         NaN         NaN   \n","1     275.994598  6487600        0.0           0.0         NaN         NaN   \n","2     275.635925  3120400        0.0           0.0         NaN         NaN   \n","3     288.993591  4288300        0.0           0.0         NaN         NaN   \n","4     285.433380  2937300        0.0           0.0  281.507025         NaN   \n","...          ...      ...        ...           ...         ...         ...   \n","1250  945.780029  3102000        0.0           0.0  934.840002  920.700000   \n","1251  954.400024  2041500        0.0           0.0  939.668005  926.335004   \n","1252  965.080017  1719900        0.0           0.0  946.734009  932.438007   \n","1253  967.080017  3096900        0.0           0.0  952.400012  939.606006   \n","1254  916.479980  5161200        0.0           0.0  949.764014  940.328003   \n","\n","      ...        EMAs       EMAl        MACD       StoK       StoD        DMP  \\\n","0     ...         NaN        NaN         NaN        NaN        NaN        NaN   \n","1     ...         NaN        NaN         NaN        NaN        NaN   0.000000   \n","2     ...         NaN        NaN         NaN        NaN  20.732779   0.000000   \n","3     ...         NaN        NaN         NaN        NaN  96.447396   9.935416   \n","4     ...         NaN        NaN         NaN        NaN  73.785848   0.000000   \n","...   ...         ...        ...         ...        ...        ...        ...   \n","1250  ...  933.030816  75.570574  857.460243  56.611451  32.538438  56.250000   \n","1251  ...  936.318387  76.294118  860.024268  64.210177  44.353120   0.000000   \n","1252  ...  940.743253  77.138825  863.604428  73.624839  58.991264  13.170044   \n","1253  ...  944.795063  77.349544  867.445519  74.855918  73.252174  10.459961   \n","1254  ...  940.438896  73.617002  866.821895  29.286712   3.481576   0.000000   \n","\n","            DMM      DI14P      DI14N        ADX  \n","0           NaN        NaN        NaN        NaN  \n","1      0.000000        NaN        NaN        NaN  \n","2      0.073732        NaN        NaN        NaN  \n","3      0.000000        NaN        NaN        NaN  \n","4      5.124161        NaN        NaN        NaN  \n","...         ...        ...        ...        ...  \n","1250   0.000000  22.842224  12.249505  30.185798  \n","1251  16.710022  21.054069  17.405828   9.485831  \n","1252   0.000000  26.565333  18.455292  18.014057  \n","1253   0.000000  27.461298  16.930622  23.722056  \n","1254   0.000000  25.394142  15.656165  23.722056  \n","\n","[1255 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-3bf3fa15-ab53-4f80-addc-20d0a83f70a8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","      <th>Dividends</th>\n","      <th>Stock Splits</th>\n","      <th>5DAvg</th>\n","      <th>10DAvg</th>\n","      <th>...</th>\n","      <th>EMAs</th>\n","      <th>EMAl</th>\n","      <th>MACD</th>\n","      <th>StoK</th>\n","      <th>StoD</th>\n","      <th>DMP</th>\n","      <th>DMM</th>\n","      <th>DI14P</th>\n","      <th>DI14N</th>\n","      <th>ADX</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-04-08 00:00:00-04:00</td>\n","      <td>280.686458</td>\n","      <td>282.811572</td>\n","      <td>278.083007</td>\n","      <td>281.477631</td>\n","      <td>3964400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-04-09 00:00:00-04:00</td>\n","      <td>275.479428</td>\n","      <td>279.987184</td>\n","      <td>273.759095</td>\n","      <td>275.994598</td>\n","      <td>6487600</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-04-13 00:00:00-04:00</td>\n","      <td>274.679168</td>\n","      <td>279.619332</td>\n","      <td>273.832828</td>\n","      <td>275.635925</td>\n","      <td>3120400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>20.732779</td>\n","      <td>0.000000</td>\n","      <td>0.073732</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-04-14 00:00:00-04:00</td>\n","      <td>278.515330</td>\n","      <td>289.554748</td>\n","      <td>277.135402</td>\n","      <td>288.993591</td>\n","      <td>4288300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>96.447396</td>\n","      <td>9.935416</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-04-15 00:00:00-04:00</td>\n","      <td>286.693737</td>\n","      <td>288.634822</td>\n","      <td>282.259564</td>\n","      <td>285.433380</td>\n","      <td>2937300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>281.507025</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>73.785848</td>\n","      <td>0.000000</td>\n","      <td>5.124161</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1250</th>\n","      <td>2025-03-31 00:00:00-04:00</td>\n","      <td>922.359985</td>\n","      <td>995.000000</td>\n","      <td>922.039978</td>\n","      <td>945.780029</td>\n","      <td>3102000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>934.840002</td>\n","      <td>920.700000</td>\n","      <td>...</td>\n","      <td>933.030816</td>\n","      <td>75.570574</td>\n","      <td>857.460243</td>\n","      <td>56.611451</td>\n","      <td>32.538438</td>\n","      <td>56.250000</td>\n","      <td>0.000000</td>\n","      <td>22.842224</td>\n","      <td>12.249505</td>\n","      <td>30.185798</td>\n","    </tr>\n","    <tr>\n","      <th>1251</th>\n","      <td>2025-04-01 00:00:00-04:00</td>\n","      <td>942.419983</td>\n","      <td>957.719971</td>\n","      <td>938.750000</td>\n","      <td>954.400024</td>\n","      <td>2041500</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>939.668005</td>\n","      <td>926.335004</td>\n","      <td>...</td>\n","      <td>936.318387</td>\n","      <td>76.294118</td>\n","      <td>860.024268</td>\n","      <td>64.210177</td>\n","      <td>44.353120</td>\n","      <td>0.000000</td>\n","      <td>16.710022</td>\n","      <td>21.054069</td>\n","      <td>17.405828</td>\n","      <td>9.485831</td>\n","    </tr>\n","    <tr>\n","      <th>1252</th>\n","      <td>2025-04-02 00:00:00-04:00</td>\n","      <td>950.840027</td>\n","      <td>970.890015</td>\n","      <td>950.000000</td>\n","      <td>965.080017</td>\n","      <td>1719900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>946.734009</td>\n","      <td>932.438007</td>\n","      <td>...</td>\n","      <td>940.743253</td>\n","      <td>77.138825</td>\n","      <td>863.604428</td>\n","      <td>73.624839</td>\n","      <td>58.991264</td>\n","      <td>13.170044</td>\n","      <td>0.000000</td>\n","      <td>26.565333</td>\n","      <td>18.455292</td>\n","      <td>18.014057</td>\n","    </tr>\n","    <tr>\n","      <th>1253</th>\n","      <td>2025-04-03 00:00:00-04:00</td>\n","      <td>931.080017</td>\n","      <td>981.349976</td>\n","      <td>928.000000</td>\n","      <td>967.080017</td>\n","      <td>3096900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>952.400012</td>\n","      <td>939.606006</td>\n","      <td>...</td>\n","      <td>944.795063</td>\n","      <td>77.349544</td>\n","      <td>867.445519</td>\n","      <td>74.855918</td>\n","      <td>73.252174</td>\n","      <td>10.459961</td>\n","      <td>0.000000</td>\n","      <td>27.461298</td>\n","      <td>16.930622</td>\n","      <td>23.722056</td>\n","    </tr>\n","    <tr>\n","      <th>1254</th>\n","      <td>2025-04-04 00:00:00-04:00</td>\n","      <td>955.000000</td>\n","      <td>964.520020</td>\n","      <td>914.140015</td>\n","      <td>916.479980</td>\n","      <td>5161200</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>949.764014</td>\n","      <td>940.328003</td>\n","      <td>...</td>\n","      <td>940.438896</td>\n","      <td>73.617002</td>\n","      <td>866.821895</td>\n","      <td>29.286712</td>\n","      <td>3.481576</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>25.394142</td>\n","      <td>15.656165</td>\n","      <td>23.722056</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1255 rows × 26 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3bf3fa15-ab53-4f80-addc-20d0a83f70a8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3bf3fa15-ab53-4f80-addc-20d0a83f70a8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3bf3fa15-ab53-4f80-addc-20d0a83f70a8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b2d3c47a-5b8c-4b14-b8c3-e54b67276c28\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b2d3c47a-5b8c-4b14-b8c3-e54b67276c28')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b2d3c47a-5b8c-4b14-b8c3-e54b67276c28 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["costData[\"Date\"].min() #2020-04-08"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_cCSER2xnKmu","executionInfo":{"status":"ok","timestamp":1744068993522,"user_tz":420,"elapsed":27,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"dfdfd326-0477-44ca-ba59-63afa709a65a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Timestamp('2020-04-08 00:00:00-0400', tz='America/New_York')"]},"metadata":{},"execution_count":96}]},{"cell_type":"markdown","source":["# Long Term Financials"],"metadata":{"id":"8-9UE2N3azCr"}},{"cell_type":"markdown","source":["## Drive Mount"],"metadata":{"id":"P-cWxjJQ9wed"}},{"cell_type":"code","source":["# Google drive mount\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nTQ2MldN87wI","executionInfo":{"status":"ok","timestamp":1744091610705,"user_tz":420,"elapsed":19997,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"f6f5bb96-66f7-4eba-a7ea-38773f2c7c7b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["## Load and Combine Datasets"],"metadata":{"id":"0FhJa5a59xon"}},{"cell_type":"code","source":["# dat was the ticker I used above\n","longTermData = pd.read_csv(\"/content/drive/MyDrive/DataScienceProjects/FinancePredictor/data/LongTermDataCSV.csv\", index_col=0).T\n","shortTermData = pd.read_csv(\"/content/drive/MyDrive/DataScienceProjects/FinancePredictor/data/IndicatedData.csv\")\n","longTermData = longTermData.dropna(axis=1)\n","longTermData.reset_index(inplace = True)\n","# longData = pd.DataFrame(longTermData).T\n","# longData.shape\n","\n","longTermData.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":342},"id":"UGqZg27la4FC","executionInfo":{"status":"ok","timestamp":1744091940131,"user_tz":420,"elapsed":225,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"33d21830-4a26-4d1f-be78-8e9081e3a4cf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Quarterly Data       index  Revenue     COGS Gross Profit Operating Income  \\\n","0                2/28/2025  63723.0  55744.0       7979.0           2316.0   \n","1               11/30/2024  62151.0  54109.0       8042.0           2196.0   \n","2                8/31/2024  79697.0  69588.0      10109.0           3042.0   \n","3                5/31/2024  58515.0  51173.0       7342.0           2197.0   \n","4                2/29/2024  58442.0  51140.0       7302.0           2062.0   \n","\n","Quarterly Data Pre Tax Income Income After Tax  \\\n","0                      2422.0           1788.0   \n","1                      2306.0           1798.0   \n","2                      3113.0           2354.0   \n","3                      2284.0           1681.0   \n","4                      2237.0           1743.0   \n","\n","Quarterly Data Income From Continuous Operations Net Income  EBITDA  ...  \\\n","0                                         1788.0     1788.0  2868.0  ...   \n","1                                         1798.0     1798.0  2744.0  ...   \n","2                                         2354.0     2354.0  3748.0  ...   \n","3                                         1681.0     1681.0  2713.0  ...   \n","4                                         1743.0     1743.0  2576.0  ...   \n","\n","Quarterly Data Basic EPS   EPS Current Ratio (1) Debt/Equity (3)  \\\n","0                   4.03  4.02            0.9972           0.225   \n","1                   4.05  4.04              0.98           0.235   \n","2                   5.29  5.28            0.9657          0.2453   \n","3                   3.79  3.78            0.9414          0.3174   \n","4                   3.93  3.92            0.9267          0.3345   \n","\n","Quarterly Data Inventory Turnover  Ratio (Half) ROE (6 Up) ROA (5 Up)  \\\n","0                                        2.9724     6.9907     2.4418   \n","1                                        2.5792     7.4545     2.4501   \n","2                                        3.7319     9.9653      3.371   \n","3                                        2.9359     7.7213     2.4753   \n","4                                         2.995      8.396      2.628   \n","\n","Quarterly Data BVPS (3 Up) OCF per share (2 Up)  \\\n","0                  57.6409                61.77   \n","1                   55.077               7.3276   \n","2                  53.3076               6.6537   \n","3                   49.103                 6.74   \n","4                  46.8043                1.635   \n","\n","Quarterly Data Free Cash Flow per share (1 Up)  \n","0                                       3.6212  \n","1                                       4.4865  \n","2                                       3.1069  \n","3                                       4.3532  \n","4                                      -0.6809  \n","\n","[5 rows x 21 columns]"],"text/html":["\n","  <div id=\"df-ccb878f4-c8aa-444e-93bf-19102b17eb58\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Quarterly Data</th>\n","      <th>index</th>\n","      <th>Revenue</th>\n","      <th>COGS</th>\n","      <th>Gross Profit</th>\n","      <th>Operating Income</th>\n","      <th>Pre Tax Income</th>\n","      <th>Income After Tax</th>\n","      <th>Income From Continuous Operations</th>\n","      <th>Net Income</th>\n","      <th>EBITDA</th>\n","      <th>...</th>\n","      <th>Basic EPS</th>\n","      <th>EPS</th>\n","      <th>Current Ratio (1)</th>\n","      <th>Debt/Equity (3)</th>\n","      <th>Inventory Turnover  Ratio (Half)</th>\n","      <th>ROE (6 Up)</th>\n","      <th>ROA (5 Up)</th>\n","      <th>BVPS (3 Up)</th>\n","      <th>OCF per share (2 Up)</th>\n","      <th>Free Cash Flow per share (1 Up)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2/28/2025</td>\n","      <td>63723.0</td>\n","      <td>55744.0</td>\n","      <td>7979.0</td>\n","      <td>2316.0</td>\n","      <td>2422.0</td>\n","      <td>1788.0</td>\n","      <td>1788.0</td>\n","      <td>1788.0</td>\n","      <td>2868.0</td>\n","      <td>...</td>\n","      <td>4.03</td>\n","      <td>4.02</td>\n","      <td>0.9972</td>\n","      <td>0.225</td>\n","      <td>2.9724</td>\n","      <td>6.9907</td>\n","      <td>2.4418</td>\n","      <td>57.6409</td>\n","      <td>61.77</td>\n","      <td>3.6212</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>11/30/2024</td>\n","      <td>62151.0</td>\n","      <td>54109.0</td>\n","      <td>8042.0</td>\n","      <td>2196.0</td>\n","      <td>2306.0</td>\n","      <td>1798.0</td>\n","      <td>1798.0</td>\n","      <td>1798.0</td>\n","      <td>2744.0</td>\n","      <td>...</td>\n","      <td>4.05</td>\n","      <td>4.04</td>\n","      <td>0.98</td>\n","      <td>0.235</td>\n","      <td>2.5792</td>\n","      <td>7.4545</td>\n","      <td>2.4501</td>\n","      <td>55.077</td>\n","      <td>7.3276</td>\n","      <td>4.4865</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>8/31/2024</td>\n","      <td>79697.0</td>\n","      <td>69588.0</td>\n","      <td>10109.0</td>\n","      <td>3042.0</td>\n","      <td>3113.0</td>\n","      <td>2354.0</td>\n","      <td>2354.0</td>\n","      <td>2354.0</td>\n","      <td>3748.0</td>\n","      <td>...</td>\n","      <td>5.29</td>\n","      <td>5.28</td>\n","      <td>0.9657</td>\n","      <td>0.2453</td>\n","      <td>3.7319</td>\n","      <td>9.9653</td>\n","      <td>3.371</td>\n","      <td>53.3076</td>\n","      <td>6.6537</td>\n","      <td>3.1069</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5/31/2024</td>\n","      <td>58515.0</td>\n","      <td>51173.0</td>\n","      <td>7342.0</td>\n","      <td>2197.0</td>\n","      <td>2284.0</td>\n","      <td>1681.0</td>\n","      <td>1681.0</td>\n","      <td>1681.0</td>\n","      <td>2713.0</td>\n","      <td>...</td>\n","      <td>3.79</td>\n","      <td>3.78</td>\n","      <td>0.9414</td>\n","      <td>0.3174</td>\n","      <td>2.9359</td>\n","      <td>7.7213</td>\n","      <td>2.4753</td>\n","      <td>49.103</td>\n","      <td>6.74</td>\n","      <td>4.3532</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2/29/2024</td>\n","      <td>58442.0</td>\n","      <td>51140.0</td>\n","      <td>7302.0</td>\n","      <td>2062.0</td>\n","      <td>2237.0</td>\n","      <td>1743.0</td>\n","      <td>1743.0</td>\n","      <td>1743.0</td>\n","      <td>2576.0</td>\n","      <td>...</td>\n","      <td>3.93</td>\n","      <td>3.92</td>\n","      <td>0.9267</td>\n","      <td>0.3345</td>\n","      <td>2.995</td>\n","      <td>8.396</td>\n","      <td>2.628</td>\n","      <td>46.8043</td>\n","      <td>1.635</td>\n","      <td>-0.6809</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 21 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ccb878f4-c8aa-444e-93bf-19102b17eb58')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ccb878f4-c8aa-444e-93bf-19102b17eb58 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ccb878f4-c8aa-444e-93bf-19102b17eb58');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0735dc51-2ace-40dc-b431-f4411efe27c5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0735dc51-2ace-40dc-b431-f4411efe27c5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0735dc51-2ace-40dc-b431-f4411efe27c5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"longTermData"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# Need to put all the quarterly data into the point and should fill all the way down to the next quarter data.\n","longTermData.index = pd.to_datetime(longTermData.index)\n","shortTermData.index = pd.to_datetime(shortTermData.index)\n","\n","# Step 2: Reindex the quarterly data to match daily dates (align to shortTermData)\n","# This will insert NaNs for non-quarterly-report dates\n","longTermAligned = longTermData.reindex(shortTermData.index, method='ffill')\n","\n","# Step 3: Merge the two dataframes\n","combined = shortTermData.copy()\n","combined[longTermData.columns] = longTermAligned\n","combined.reset_index(inplace = True)\n","middle = combined.drop(combined.columns[0], axis=1)\n","final = middle.drop(middle.columns[0], axis=1)\n","final.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":602},"id":"d3hexghQ9vbl","executionInfo":{"status":"ok","timestamp":1744092593627,"user_tz":420,"elapsed":249,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"98198571-2fd5-4e98-a1e1-0b52acaa1a3f"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        Date        Open        High         Low       Close  \\\n","0  2020-04-08 00:00:00-04:00  280.686458  282.811572  278.083007  281.477631   \n","1  2020-04-09 00:00:00-04:00  275.479428  279.987184  273.759095  275.994598   \n","2  2020-04-13 00:00:00-04:00  274.679168  279.619332  273.832828  275.635925   \n","3  2020-04-14 00:00:00-04:00  278.515330  289.554748  277.135402  288.993591   \n","4  2020-04-15 00:00:00-04:00  286.693737  288.634822  282.259564  285.433380   \n","\n","    Volume  Dividends  Stock Splits       5DAvg  10DAvg  ...  Basic EPS   EPS  \\\n","0  3964400        0.0           0.0         NaN     NaN  ...       4.03  4.02   \n","1  6487600        0.0           0.0         NaN     NaN  ...       4.05  4.04   \n","2  3120400        0.0           0.0         NaN     NaN  ...       5.29  5.28   \n","3  4288300        0.0           0.0         NaN     NaN  ...       3.79  3.78   \n","4  2937300        0.0           0.0  281.507025     NaN  ...       3.93  3.92   \n","\n","   Current Ratio (1)  Debt/Equity (3)  Inventory Turnover  Ratio (Half)  \\\n","0             0.9972            0.225                            2.9724   \n","1               0.98            0.235                            2.5792   \n","2             0.9657           0.2453                            3.7319   \n","3             0.9414           0.3174                            2.9359   \n","4             0.9267           0.3345                             2.995   \n","\n","   ROE (6 Up)  ROA (5 Up)  BVPS (3 Up)  OCF per share (2 Up)  \\\n","0      6.9907      2.4418      57.6409                 61.77   \n","1      7.4545      2.4501       55.077                7.3276   \n","2      9.9653       3.371      53.3076                6.6537   \n","3      7.7213      2.4753       49.103                  6.74   \n","4       8.396       2.628      46.8043                 1.635   \n","\n","   Free Cash Flow per share (1 Up)  \n","0                           3.6212  \n","1                           4.4865  \n","2                           3.1069  \n","3                           4.3532  \n","4                          -0.6809  \n","\n","[5 rows x 47 columns]"],"text/html":["\n","  <div id=\"df-e88c84f6-dc64-480a-92a9-eb053e70980b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","      <th>Dividends</th>\n","      <th>Stock Splits</th>\n","      <th>5DAvg</th>\n","      <th>10DAvg</th>\n","      <th>...</th>\n","      <th>Basic EPS</th>\n","      <th>EPS</th>\n","      <th>Current Ratio (1)</th>\n","      <th>Debt/Equity (3)</th>\n","      <th>Inventory Turnover  Ratio (Half)</th>\n","      <th>ROE (6 Up)</th>\n","      <th>ROA (5 Up)</th>\n","      <th>BVPS (3 Up)</th>\n","      <th>OCF per share (2 Up)</th>\n","      <th>Free Cash Flow per share (1 Up)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-04-08 00:00:00-04:00</td>\n","      <td>280.686458</td>\n","      <td>282.811572</td>\n","      <td>278.083007</td>\n","      <td>281.477631</td>\n","      <td>3964400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>4.03</td>\n","      <td>4.02</td>\n","      <td>0.9972</td>\n","      <td>0.225</td>\n","      <td>2.9724</td>\n","      <td>6.9907</td>\n","      <td>2.4418</td>\n","      <td>57.6409</td>\n","      <td>61.77</td>\n","      <td>3.6212</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-04-09 00:00:00-04:00</td>\n","      <td>275.479428</td>\n","      <td>279.987184</td>\n","      <td>273.759095</td>\n","      <td>275.994598</td>\n","      <td>6487600</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>4.05</td>\n","      <td>4.04</td>\n","      <td>0.98</td>\n","      <td>0.235</td>\n","      <td>2.5792</td>\n","      <td>7.4545</td>\n","      <td>2.4501</td>\n","      <td>55.077</td>\n","      <td>7.3276</td>\n","      <td>4.4865</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-04-13 00:00:00-04:00</td>\n","      <td>274.679168</td>\n","      <td>279.619332</td>\n","      <td>273.832828</td>\n","      <td>275.635925</td>\n","      <td>3120400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>5.29</td>\n","      <td>5.28</td>\n","      <td>0.9657</td>\n","      <td>0.2453</td>\n","      <td>3.7319</td>\n","      <td>9.9653</td>\n","      <td>3.371</td>\n","      <td>53.3076</td>\n","      <td>6.6537</td>\n","      <td>3.1069</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-04-14 00:00:00-04:00</td>\n","      <td>278.515330</td>\n","      <td>289.554748</td>\n","      <td>277.135402</td>\n","      <td>288.993591</td>\n","      <td>4288300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>3.79</td>\n","      <td>3.78</td>\n","      <td>0.9414</td>\n","      <td>0.3174</td>\n","      <td>2.9359</td>\n","      <td>7.7213</td>\n","      <td>2.4753</td>\n","      <td>49.103</td>\n","      <td>6.74</td>\n","      <td>4.3532</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-04-15 00:00:00-04:00</td>\n","      <td>286.693737</td>\n","      <td>288.634822</td>\n","      <td>282.259564</td>\n","      <td>285.433380</td>\n","      <td>2937300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>281.507025</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>3.93</td>\n","      <td>3.92</td>\n","      <td>0.9267</td>\n","      <td>0.3345</td>\n","      <td>2.995</td>\n","      <td>8.396</td>\n","      <td>2.628</td>\n","      <td>46.8043</td>\n","      <td>1.635</td>\n","      <td>-0.6809</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 47 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e88c84f6-dc64-480a-92a9-eb053e70980b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e88c84f6-dc64-480a-92a9-eb053e70980b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e88c84f6-dc64-480a-92a9-eb053e70980b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4b3af441-8964-41d4-96ca-0de4896d110c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b3af441-8964-41d4-96ca-0de4896d110c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4b3af441-8964-41d4-96ca-0de4896d110c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final"}},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["# Save to CSV as final data\n","final.to_csv(\"FinalData.csv\", index = True)\n","\n","# This CSV is all of our data\n","final[:-1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"8AMlA6f7_za9","executionInfo":{"status":"ok","timestamp":1744092602871,"user_tz":420,"elapsed":143,"user":{"displayName":"Erik van Cruyningen","userId":"00842444165026885859"}},"outputId":"3fb28faf-2c33-4d5b-b391-09af96c23747"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                           Date        Open        High         Low  \\\n","0     2020-04-08 00:00:00-04:00  280.686458  282.811572  278.083007   \n","1     2020-04-09 00:00:00-04:00  275.479428  279.987184  273.759095   \n","2     2020-04-13 00:00:00-04:00  274.679168  279.619332  273.832828   \n","3     2020-04-14 00:00:00-04:00  278.515330  289.554748  277.135402   \n","4     2020-04-15 00:00:00-04:00  286.693737  288.634822  282.259564   \n","...                         ...         ...         ...         ...   \n","1250  2025-03-31 00:00:00-04:00  922.359985  995.000000  922.039978   \n","1251  2025-04-01 00:00:00-04:00  942.419983  957.719971  938.750000   \n","1252  2025-04-02 00:00:00-04:00  950.840027  970.890015  950.000000   \n","1253  2025-04-03 00:00:00-04:00  931.080017  981.349976  928.000000   \n","1254  2025-04-04 00:00:00-04:00  955.000000  964.520020  914.140015   \n","\n","           Close   Volume  Dividends  Stock Splits       5DAvg      10DAvg  \\\n","0     281.477631  3964400        0.0           0.0         NaN         NaN   \n","1     275.994598  6487600        0.0           0.0         NaN         NaN   \n","2     275.635925  3120400        0.0           0.0         NaN         NaN   \n","3     288.993591  4288300        0.0           0.0         NaN         NaN   \n","4     285.433380  2937300        0.0           0.0  281.507025         NaN   \n","...          ...      ...        ...           ...         ...         ...   \n","1250  945.780029  3102000        0.0           0.0  934.840002  920.700000   \n","1251  954.400024  2041500        0.0           0.0  939.668005  926.335004   \n","1252  965.080017  1719900        0.0           0.0  946.734009  932.438007   \n","1253  967.080017  3096900        0.0           0.0  952.400012  939.606006   \n","1254  916.479980  5161200        0.0           0.0  949.764014  940.328003   \n","\n","      ...  Basic EPS   EPS  Current Ratio (1)  Debt/Equity (3)  \\\n","0     ...       4.03  4.02             0.9972            0.225   \n","1     ...       4.05  4.04               0.98            0.235   \n","2     ...       5.29  5.28             0.9657           0.2453   \n","3     ...       3.79  3.78             0.9414           0.3174   \n","4     ...       3.93  3.92             0.9267           0.3345   \n","...   ...        ...   ...                ...              ...   \n","1250  ...        2.1   2.1             1.0444           0.3294   \n","1251  ...        2.1   2.1             1.0444           0.3294   \n","1252  ...        2.1   2.1             1.0444           0.3294   \n","1253  ...        2.1   2.1             1.0444           0.3294   \n","1254  ...        2.1   2.1             1.0444           0.3294   \n","\n","      Inventory Turnover  Ratio (Half)  ROE (6 Up)  ROA (5 Up)  BVPS (3 Up)  \\\n","0                               2.9724      6.9907      2.4418      57.6409   \n","1                               2.5792      7.4545      2.4501       55.077   \n","2                               3.7319      9.9653       3.371      53.3076   \n","3                               2.9359      7.7213      2.4753       49.103   \n","4                                2.995       8.396       2.628      46.8043   \n","...                                ...         ...         ...          ...   \n","1250                            2.8739      5.5709      1.9413      38.4922   \n","1251                            2.8739      5.5709      1.9413      38.4922   \n","1252                            2.8739      5.5709      1.9413      38.4922   \n","1253                            2.8739      5.5709      1.9413      38.4922   \n","1254                            2.8739      5.5709      1.9413      38.4922   \n","\n","      OCF per share (2 Up)  Free Cash Flow per share (1 Up)  \n","0                    61.77                           3.6212  \n","1                   7.3276                           4.4865  \n","2                   6.6537                           3.1069  \n","3                     6.74                           4.3532  \n","4                    1.635                          -0.6809  \n","...                    ...                              ...  \n","1250                1.3945                           0.1665  \n","1251                1.3945                           0.1665  \n","1252                1.3945                           0.1665  \n","1253                1.3945                           0.1665  \n","1254                1.3945                           0.1665  \n","\n","[1255 rows x 47 columns]"],"text/html":["\n","  <div id=\"df-984edbca-c3c0-40ca-9c10-a345b97c39a5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","      <th>Volume</th>\n","      <th>Dividends</th>\n","      <th>Stock Splits</th>\n","      <th>5DAvg</th>\n","      <th>10DAvg</th>\n","      <th>...</th>\n","      <th>Basic EPS</th>\n","      <th>EPS</th>\n","      <th>Current Ratio (1)</th>\n","      <th>Debt/Equity (3)</th>\n","      <th>Inventory Turnover  Ratio (Half)</th>\n","      <th>ROE (6 Up)</th>\n","      <th>ROA (5 Up)</th>\n","      <th>BVPS (3 Up)</th>\n","      <th>OCF per share (2 Up)</th>\n","      <th>Free Cash Flow per share (1 Up)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-04-08 00:00:00-04:00</td>\n","      <td>280.686458</td>\n","      <td>282.811572</td>\n","      <td>278.083007</td>\n","      <td>281.477631</td>\n","      <td>3964400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>4.03</td>\n","      <td>4.02</td>\n","      <td>0.9972</td>\n","      <td>0.225</td>\n","      <td>2.9724</td>\n","      <td>6.9907</td>\n","      <td>2.4418</td>\n","      <td>57.6409</td>\n","      <td>61.77</td>\n","      <td>3.6212</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-04-09 00:00:00-04:00</td>\n","      <td>275.479428</td>\n","      <td>279.987184</td>\n","      <td>273.759095</td>\n","      <td>275.994598</td>\n","      <td>6487600</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>4.05</td>\n","      <td>4.04</td>\n","      <td>0.98</td>\n","      <td>0.235</td>\n","      <td>2.5792</td>\n","      <td>7.4545</td>\n","      <td>2.4501</td>\n","      <td>55.077</td>\n","      <td>7.3276</td>\n","      <td>4.4865</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-04-13 00:00:00-04:00</td>\n","      <td>274.679168</td>\n","      <td>279.619332</td>\n","      <td>273.832828</td>\n","      <td>275.635925</td>\n","      <td>3120400</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>5.29</td>\n","      <td>5.28</td>\n","      <td>0.9657</td>\n","      <td>0.2453</td>\n","      <td>3.7319</td>\n","      <td>9.9653</td>\n","      <td>3.371</td>\n","      <td>53.3076</td>\n","      <td>6.6537</td>\n","      <td>3.1069</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-04-14 00:00:00-04:00</td>\n","      <td>278.515330</td>\n","      <td>289.554748</td>\n","      <td>277.135402</td>\n","      <td>288.993591</td>\n","      <td>4288300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>3.79</td>\n","      <td>3.78</td>\n","      <td>0.9414</td>\n","      <td>0.3174</td>\n","      <td>2.9359</td>\n","      <td>7.7213</td>\n","      <td>2.4753</td>\n","      <td>49.103</td>\n","      <td>6.74</td>\n","      <td>4.3532</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-04-15 00:00:00-04:00</td>\n","      <td>286.693737</td>\n","      <td>288.634822</td>\n","      <td>282.259564</td>\n","      <td>285.433380</td>\n","      <td>2937300</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>281.507025</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>3.93</td>\n","      <td>3.92</td>\n","      <td>0.9267</td>\n","      <td>0.3345</td>\n","      <td>2.995</td>\n","      <td>8.396</td>\n","      <td>2.628</td>\n","      <td>46.8043</td>\n","      <td>1.635</td>\n","      <td>-0.6809</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1250</th>\n","      <td>2025-03-31 00:00:00-04:00</td>\n","      <td>922.359985</td>\n","      <td>995.000000</td>\n","      <td>922.039978</td>\n","      <td>945.780029</td>\n","      <td>3102000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>934.840002</td>\n","      <td>920.700000</td>\n","      <td>...</td>\n","      <td>2.1</td>\n","      <td>2.1</td>\n","      <td>1.0444</td>\n","      <td>0.3294</td>\n","      <td>2.8739</td>\n","      <td>5.5709</td>\n","      <td>1.9413</td>\n","      <td>38.4922</td>\n","      <td>1.3945</td>\n","      <td>0.1665</td>\n","    </tr>\n","    <tr>\n","      <th>1251</th>\n","      <td>2025-04-01 00:00:00-04:00</td>\n","      <td>942.419983</td>\n","      <td>957.719971</td>\n","      <td>938.750000</td>\n","      <td>954.400024</td>\n","      <td>2041500</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>939.668005</td>\n","      <td>926.335004</td>\n","      <td>...</td>\n","      <td>2.1</td>\n","      <td>2.1</td>\n","      <td>1.0444</td>\n","      <td>0.3294</td>\n","      <td>2.8739</td>\n","      <td>5.5709</td>\n","      <td>1.9413</td>\n","      <td>38.4922</td>\n","      <td>1.3945</td>\n","      <td>0.1665</td>\n","    </tr>\n","    <tr>\n","      <th>1252</th>\n","      <td>2025-04-02 00:00:00-04:00</td>\n","      <td>950.840027</td>\n","      <td>970.890015</td>\n","      <td>950.000000</td>\n","      <td>965.080017</td>\n","      <td>1719900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>946.734009</td>\n","      <td>932.438007</td>\n","      <td>...</td>\n","      <td>2.1</td>\n","      <td>2.1</td>\n","      <td>1.0444</td>\n","      <td>0.3294</td>\n","      <td>2.8739</td>\n","      <td>5.5709</td>\n","      <td>1.9413</td>\n","      <td>38.4922</td>\n","      <td>1.3945</td>\n","      <td>0.1665</td>\n","    </tr>\n","    <tr>\n","      <th>1253</th>\n","      <td>2025-04-03 00:00:00-04:00</td>\n","      <td>931.080017</td>\n","      <td>981.349976</td>\n","      <td>928.000000</td>\n","      <td>967.080017</td>\n","      <td>3096900</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>952.400012</td>\n","      <td>939.606006</td>\n","      <td>...</td>\n","      <td>2.1</td>\n","      <td>2.1</td>\n","      <td>1.0444</td>\n","      <td>0.3294</td>\n","      <td>2.8739</td>\n","      <td>5.5709</td>\n","      <td>1.9413</td>\n","      <td>38.4922</td>\n","      <td>1.3945</td>\n","      <td>0.1665</td>\n","    </tr>\n","    <tr>\n","      <th>1254</th>\n","      <td>2025-04-04 00:00:00-04:00</td>\n","      <td>955.000000</td>\n","      <td>964.520020</td>\n","      <td>914.140015</td>\n","      <td>916.479980</td>\n","      <td>5161200</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>949.764014</td>\n","      <td>940.328003</td>\n","      <td>...</td>\n","      <td>2.1</td>\n","      <td>2.1</td>\n","      <td>1.0444</td>\n","      <td>0.3294</td>\n","      <td>2.8739</td>\n","      <td>5.5709</td>\n","      <td>1.9413</td>\n","      <td>38.4922</td>\n","      <td>1.3945</td>\n","      <td>0.1665</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1255 rows × 47 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-984edbca-c3c0-40ca-9c10-a345b97c39a5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-984edbca-c3c0-40ca-9c10-a345b97c39a5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-984edbca-c3c0-40ca-9c10-a345b97c39a5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-047ca572-2c55-4bf5-852d-8ca432ea704f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-047ca572-2c55-4bf5-852d-8ca432ea704f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-047ca572-2c55-4bf5-852d-8ca432ea704f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":38}]}]}